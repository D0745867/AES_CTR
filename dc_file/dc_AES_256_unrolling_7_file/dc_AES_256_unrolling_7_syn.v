/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : U-2022.12
// Date      : Mon May 20 15:29:14 2024
/////////////////////////////////////////////////////////////


module ftop_0 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n2, n3, n4, n5, n6, n7, n8, n9;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n4), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n2), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n6), .B(n7), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n4), .B(n3), .Y(n7) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n4), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n2), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n2), .B(n3), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n2) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n5), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n5) );
  XOR2_X0P7M_A9TR U13 ( .A(n8), .B(U0), .Y(n4) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n8) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n4), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(n6), .B(n9), .Y(Q1) );
  XOR2_X0P7M_A9TR U17 ( .A(U3), .B(U0), .Y(n9) );
  XOR2_X0P7M_A9TR U18 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U19 ( .A(U4), .B(U6), .Y(n6) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n4), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n2), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n3) );
  XNOR2_X0P7M_A9TR U23 ( .A(n8), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n3), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_0 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16,
         n17, n18, n19, n20;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n4) );
  XOR2_X0P7M_A9TR U2 ( .A(n7), .B(n8), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n9), .B(n3), .Y(n8) );
  XOR2_X0P7M_A9TR U4 ( .A(n10), .B(n11), .Y(n7) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n10) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n11) );
  XOR2_X0P7M_A9TR U7 ( .A(n12), .B(n13), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n15), .B(n16), .Y(n12) );
  XOR2_X0P7M_A9TR U9 ( .A(n14), .B(n3), .Y(n13) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n17), .B(n18), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n19), .B(n20), .Y(n17) );
  XOR2_X0P7M_A9TR U13 ( .A(n14), .B(n9), .Y(n18) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n19) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n14) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n3) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n9) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n6) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n20) );
  XOR2_X0P7M_A9TR U20 ( .A(n1), .B(n2), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n5), .B(n6), .Y(n1) );
  XOR2_X0P7M_A9TR U22 ( .A(n3), .B(n4), .Y(n2) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n5) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n16) );
endmodule


module inv_0 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n1, n2, n3, n4, n5, n6, n7;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n3) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n4), .B0(n1), .B1(n3), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n6), .Y(n1) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n2), .B0N(n6), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n1), .A1(n2), .B0(n5), .B1(n6), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n4), .Y(n5) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n3), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n2) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n7), .Y(n6) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n7) );
  AO22_X1M_A9TR U12 ( .A0(n6), .A1(x3), .B0(T3), .B1(n1), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n4) );
endmodule


module s1_0 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n1, n2, n3, n4, n5;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n2) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n2), .B0(n1), .C0(n4), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n1), .C(x1), .Y(n4) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n1) );
  AOI22_X1M_A9TR U8 ( .A0(n2), .A1(x3), .B0(n5), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n3), .Y(n5) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n3) );
endmodule


module muln_0 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_0 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n30, n40, n50, n60, n70, n80, n90, n100, n110, n120, n130, n140, n150,
         n160, n170, n18, n19, n20, n21, n22, n23, n24, n25, n111;

  XNOR2_X0P7M_A9TR U1 ( .A(n40), .B(n150), .Y(n130) );
  XNOR2_X0P7M_A9TR U2 ( .A(n150), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n80), .B(N13), .Y(n40) );
  XOR2_X0P7M_A9TR U4 ( .A(n120), .B(n130), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n130), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n19), .B(N5), .Y(n150) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n19) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n140) );
  XOR2_X0P7M_A9TR U9 ( .A(n120), .B(n90), .Y(n30) );
  XOR2_X0P7M_A9TR U10 ( .A(n100), .B(n110), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n110) );
  XNOR2_X0P7M_A9TR U12 ( .A(n30), .B(N16), .Y(n100) );
  XNOR2_X0P7M_A9TR U13 ( .A(n111), .B(n30), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n40), .B(N0), .Y(n111) );
  XOR2_X0P7M_A9TR U15 ( .A(n20), .B(n21), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n22), .B(n23), .Y(n21) );
  XOR2_X0P7M_A9TR U17 ( .A(n24), .B(n25), .Y(n20) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n22) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n24) );
  XOR2_X0P7M_A9TR U20 ( .A(n50), .B(n60), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n70), .Y(n60) );
  XOR2_X0P7M_A9TR U22 ( .A(n80), .B(n90), .Y(n50) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n70) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n23) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n90) );
  XOR2_X0P7M_A9TR U26 ( .A(n160), .B(N14), .Y(n80) );
  XOR2_X0P7M_A9TR U27 ( .A(n170), .B(n18), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n160), .B(N11), .Y(n170) );
  XNOR2_X0P7M_A9TR U29 ( .A(n150), .B(n140), .Y(n18) );
  XOR2_X0P7M_A9TR U30 ( .A(n140), .B(N10), .Y(n120) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n25) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n160) );
endmodule


module SubBytes_0 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_0 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_0 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_0 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_0 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_0 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_0 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_0 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_0 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n1, n2, n3, n5, n7, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18,
         n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32,
         n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46,
         n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60,
         n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74,
         n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86;

  INV_X1M_A9TR U1 ( .A(n47), .Y(n7) );
  INV_X1M_A9TR U2 ( .A(n44), .Y(n5) );
  INV_X1M_A9TR U3 ( .A(n53), .Y(n3) );
  INV_X1M_A9TR U4 ( .A(n74), .Y(n9) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n37) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n21) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n47) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n32) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n44) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n28) );
  INV_X1M_A9TR U11 ( .A(n52), .Y(n1) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n69) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n13) );
  INV_X1M_A9TR U14 ( .A(n27), .Y(n2) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n63) );
  XNOR2_X0P7M_A9TR U16 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n24) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n14) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n29) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n10), .Y(n19) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n10) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n53) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n40) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n48) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n74) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n75) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n66) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n33) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n52) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n15) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n62) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n27) );
  XOR2_X0P7M_A9TR U32 ( .A(n67), .B(n68), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n69), .B(mix_col_in[10]), .Y(n67) );
  XOR2_X0P7M_A9TR U34 ( .A(n62), .B(n7), .Y(n68) );
  XOR2_X0P7M_A9TR U35 ( .A(n45), .B(n46), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n1), .B(mix_col_in[19]), .Y(n45) );
  XOR2_X0P7M_A9TR U37 ( .A(n47), .B(n40), .Y(n46) );
  XOR2_X0P7M_A9TR U38 ( .A(n42), .B(n43), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n1), .B(mix_col_in[20]), .Y(n42) );
  XOR2_X0P7M_A9TR U40 ( .A(n44), .B(n32), .Y(n43) );
  XOR2_X0P7M_A9TR U41 ( .A(n83), .B(n84), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n15), .B(mix_col_in[3]), .Y(n83) );
  XOR2_X0P7M_A9TR U43 ( .A(n48), .B(n32), .Y(n84) );
  XOR2_X0P7M_A9TR U44 ( .A(n30), .B(n31), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n33), .Y(n30) );
  XOR2_X0P7M_A9TR U46 ( .A(n2), .B(n32), .Y(n31) );
  XOR2_X0P7M_A9TR U47 ( .A(n60), .B(n61), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n63), .B(mix_col_in[11]), .Y(n60) );
  XOR2_X0P7M_A9TR U49 ( .A(n62), .B(n5), .Y(n61) );
  XOR2_X0P7M_A9TR U50 ( .A(n81), .B(n82), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n15), .B(mix_col_in[4]), .Y(n81) );
  XOR2_X0P7M_A9TR U52 ( .A(n47), .B(n28), .Y(n82) );
  XOR2_X0P7M_A9TR U53 ( .A(n25), .B(n26), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n29), .B(mix_col_in[12]), .Y(n25) );
  XOR2_X0P7M_A9TR U55 ( .A(n27), .B(n28), .Y(n26) );
  XOR2_X0P7M_A9TR U56 ( .A(n48), .B(n49), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n13), .B(mix_col_in[18]), .Y(n49) );
  XOR2_X0P7M_A9TR U58 ( .A(n37), .B(n57), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n24), .B(mix_col_in[30]), .Y(n57) );
  XOR2_X0P7M_A9TR U60 ( .A(n1), .B(n54), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U61 ( .A(n14), .B(mix_col_in[16]), .Y(n54) );
  XOR2_X0P7M_A9TR U62 ( .A(n11), .B(n12), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U63 ( .A(n15), .B(mix_col_in[1]), .Y(n11) );
  XNOR2_X0P7M_A9TR U64 ( .A(n13), .B(n14), .Y(n12) );
  XNOR2_X0P7M_A9TR U65 ( .A(n28), .B(n41), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U66 ( .A(n24), .B(mix_col_in[5]), .Y(n41) );
  XOR2_X0P7M_A9TR U67 ( .A(n21), .B(n34), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n15), .B(mix_col_in[23]), .Y(n34) );
  XOR2_X0P7M_A9TR U69 ( .A(n58), .B(n59), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n58) );
  XOR2_X0P7M_A9TR U71 ( .A(n19), .B(mix_col_in[12]), .Y(n59) );
  XOR2_X0P7M_A9TR U72 ( .A(n44), .B(n80), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U73 ( .A(n19), .B(mix_col_in[21]), .Y(n80) );
  XOR2_X0P7M_A9TR U74 ( .A(n50), .B(n51), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U75 ( .A(n52), .B(n9), .Y(n51) );
  XOR2_X0P7M_A9TR U76 ( .A(mix_col_in[17]), .B(n53), .Y(n50) );
  XOR2_X0P7M_A9TR U77 ( .A(n62), .B(n76), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U78 ( .A(n14), .B(mix_col_in[24]), .Y(n76) );
  XOR2_X0P7M_A9TR U79 ( .A(n3), .B(n16), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n15), .B(mix_col_in[0]), .Y(n16) );
  XOR2_X0P7M_A9TR U81 ( .A(n27), .B(n86), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U82 ( .A(n3), .B(mix_col_in[8]), .Y(n86) );
  XOR2_X0P7M_A9TR U83 ( .A(n37), .B(n77), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U84 ( .A(n1), .B(mix_col_in[7]), .Y(n77) );
  XOR2_X0P7M_A9TR U85 ( .A(n55), .B(n56), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n55) );
  XOR2_X0P7M_A9TR U87 ( .A(n15), .B(mix_col_in[14]), .Y(n56) );
  XOR2_X0P7M_A9TR U88 ( .A(n17), .B(n18), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U89 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n17) );
  XOR2_X0P7M_A9TR U90 ( .A(n1), .B(mix_col_in[15]), .Y(n18) );
  XOR2_X0P7M_A9TR U91 ( .A(n22), .B(n23), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U92 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n22) );
  XOR2_X0P7M_A9TR U93 ( .A(n24), .B(mix_col_in[28]), .Y(n23) );
  XOR2_X0P7M_A9TR U94 ( .A(n72), .B(n73), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U95 ( .A(n75), .B(mix_col_in[16]), .Y(n72) );
  XOR2_X0P7M_A9TR U96 ( .A(n62), .B(n9), .Y(n73) );
  XOR2_X0P7M_A9TR U97 ( .A(n35), .B(n36), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n35) );
  XOR2_X0P7M_A9TR U99 ( .A(n37), .B(mix_col_in[21]), .Y(n36) );
  XOR2_X0P7M_A9TR U100 ( .A(n70), .B(n71), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n70) );
  XOR2_X0P7M_A9TR U102 ( .A(n48), .B(mix_col_in[17]), .Y(n71) );
  XOR2_X0P7M_A9TR U103 ( .A(n74), .B(n85), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n40), .B(mix_col_in[2]), .Y(n85) );
  XOR2_X0P7M_A9TR U105 ( .A(n78), .B(n79), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n10), .B(mix_col_in[6]), .Y(n78) );
  XOR2_X0P7M_A9TR U107 ( .A(n21), .B(mix_col_in[13]), .Y(n79) );
  XOR2_X0P7M_A9TR U108 ( .A(n38), .B(n39), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n38) );
  XNOR2_X0P7M_A9TR U110 ( .A(n40), .B(mix_col_in[10]), .Y(n39) );
  XOR2_X0P7M_A9TR U111 ( .A(n64), .B(n65), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U112 ( .A(n66), .B(mix_col_in[0]), .Y(n64) );
  XOR2_X0P7M_A9TR U113 ( .A(n27), .B(n13), .Y(n65) );
  XOR2_X0P7M_A9TR U114 ( .A(n19), .B(n20), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n21), .B(mix_col_in[14]), .Y(n20) );
endmodule


module ARK_0 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126])
         );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110])
         );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
endmodule


module ftop_97 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_97 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_97 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_97 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_97 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_97 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U21 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U22 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U23 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_97 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_97 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_97 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_97 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_97 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_97 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_97 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_98 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_98 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_98 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  INV_X1M_A9TR U2 ( .A(n10), .Y(n15) );
  OAI22_X1M_A9TR U3 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_98 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_98 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_98 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_98 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_98 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_98 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_98 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_98 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_98 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_98 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_99 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_99 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_99 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_99 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_99 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_99 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_99 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_99 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_99 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_99 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_99 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_99 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_99 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_100 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_100 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_100 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_100 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_100 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_100 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U9 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U10 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U12 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_100 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_100 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_100 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_100 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_100 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_100 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_100 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_101 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_101 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_101 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_101 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_101 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_101 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U21 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U22 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U23 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_101 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_101 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_101 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_101 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_101 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_101 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_101 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_102 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XOR2_X0P7M_A9TR U17 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_102 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_102 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_102 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_102 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_102 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_102 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_102 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_102 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_102 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_102 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_102 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_102 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_103 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_103 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_103 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_103 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_103 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_103 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_103 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_103 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_103 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_103 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_103 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_103 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_103 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_104 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_104 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_104 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_104 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_104 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_104 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U9 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U10 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U11 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_104 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_104 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_104 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_104 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_104 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_104 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_104 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_105 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_105 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_105 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_105 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_105 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_105 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_105 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_105 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_105 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_105 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_105 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_105 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_105 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_106 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_106 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_106 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  INV_X1M_A9TR U2 ( .A(n10), .Y(n15) );
  OAI22_X1M_A9TR U3 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_106 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_106 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_106 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_106 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_106 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_106 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_106 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_106 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_106 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_106 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_107 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_107 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_107 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_107 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_107 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_107 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_107 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_107 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_107 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_107 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_107 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_107 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_107 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_108 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U17 ( .A(U3), .B(U0), .Y(n1) );
  XNOR2_X0P7M_A9TR U18 ( .A(U4), .B(U6), .Y(n11) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_108 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_108 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_108 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_108 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_108 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_108 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_108 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_108 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_108 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_108 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_108 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_108 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_109 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_109 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_109 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_109 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_109 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_109 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_109 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_109 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_109 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_109 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_109 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_109 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_109 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_110 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_110 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_110 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_110 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_110 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_110 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_110 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_110 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_110 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_110 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_110 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_110 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_110 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_111 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XNOR2_X0P7M_A9TR U60 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U8 ( .A(Q11), .B(Q12), .Y(Q0) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XNOR2_X0P7M_A9TR U11 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U12 ( .A(U7), .B(U1), .Y(n12) );
  XOR2_X0P7M_A9TR U13 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U14 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U20 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_111 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_111 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_111 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, 
        Y23 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_111 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_111 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_111 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_111 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_111 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_111 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), 
        .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_111 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(
        Y13), .Y23(Y23) );
  muln_111 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_111 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module mix_columns_25 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  INV_X1M_A9TR U14 ( .A(n140), .Y(n162) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XNOR2_X0P7M_A9TR U16 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U40 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U41 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U43 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U60 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U61 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U62 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U63 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U64 ( .A(n154), .B(n153), .Y(n155) );
  XNOR2_X0P7M_A9TR U65 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U66 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U71 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U72 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U73 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U74 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U75 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U76 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U77 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U78 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U79 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U80 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U81 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U82 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U83 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U84 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U85 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U87 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U88 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U89 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U91 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U92 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U93 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U94 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U95 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U96 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U97 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U99 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U110 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U111 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U112 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U113 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_26 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  INV_X1M_A9TR U14 ( .A(n140), .Y(n162) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XNOR2_X0P7M_A9TR U16 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U40 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U41 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U43 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U60 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U61 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U62 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U63 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U64 ( .A(n154), .B(n153), .Y(n155) );
  XNOR2_X0P7M_A9TR U65 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U66 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U71 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U72 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U73 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U74 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U75 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U76 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U77 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U78 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U82 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U83 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U84 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U85 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U87 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U88 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U89 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U91 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U92 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U93 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U94 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U95 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U96 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U97 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U99 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U110 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U111 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U112 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U113 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_27 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  INV_X1M_A9TR U14 ( .A(n140), .Y(n162) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XNOR2_X0P7M_A9TR U16 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U40 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U41 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U43 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U60 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U61 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U62 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U63 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U64 ( .A(n154), .B(n153), .Y(n155) );
  XNOR2_X0P7M_A9TR U65 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U66 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U70 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U71 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U72 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U73 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U74 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U75 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U76 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U77 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U78 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U79 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U80 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U81 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U82 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U83 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U84 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U85 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U87 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U88 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U89 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U91 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U92 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U93 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U94 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U95 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U96 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U97 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U99 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U110 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U111 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U112 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U113 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module AES_256_roundop_0 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_0 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), .byte_in(
        input_text[7:0]) );
  SubBytes_111 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_110 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_109 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), 
        .byte_in(input_text[31:24]) );
  SubBytes_108 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_107 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_106 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_105 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_104 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_103 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_102 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), 
        .byte_in(input_text[87:80]) );
  SubBytes_101 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), 
        .byte_in(input_text[95:88]) );
  SubBytes_100 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), 
        .byte_in(input_text[103:96]) );
  SubBytes_99 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_98 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_97 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_0 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_0 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_27 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_26 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_25 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_0 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module ftop_1 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_1 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_1 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_1 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_1 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_1 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_1 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_1 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_1 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_1 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_1 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_1 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_1 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_2 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_2 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_2 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_2 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AOI22_X1M_A9TR U5 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U6 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U7 ( .A(T3), .Y(n9) );
  AO21A1AI2_X1M_A9TR U8 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U9 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U10 ( .A(x0), .Y(n11) );
endmodule


module muln_2 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_2 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(N16), .B(n44), .Y(R3) );
  XOR2_X0P7M_A9TR U5 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U6 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U7 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U8 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U9 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U10 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U11 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U12 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U13 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U14 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U28 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U29 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U30 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_2 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_2 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_2 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_2 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_2 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_2 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_2 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_3 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_3 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_3 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_3 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_3 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_3 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_3 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_3 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_3 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_3 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_3 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_3 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_3 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_4 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_4 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_4 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_4 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_4 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_4 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_4 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_4 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_4 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_4 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_4 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_4 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_4 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_5 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_5 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_5 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_5 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_5 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_5 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_5 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_5 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_5 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_5 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_5 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_5 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_5 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_6 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_6 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_6 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_6 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AOI22_X1M_A9TR U5 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U6 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U7 ( .A(T3), .Y(n9) );
  AO21A1AI2_X1M_A9TR U8 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U9 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U10 ( .A(x0), .Y(n11) );
endmodule


module muln_6 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_6 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XOR2_X0P7M_A9TR U6 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U7 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U8 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U9 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U10 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U11 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U12 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U13 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U14 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U28 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U29 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U30 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_6 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_6 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_6 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_6 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_6 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_6 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_6 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_7 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_7 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_7 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_7 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_7 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_7 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_7 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_7 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_7 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_7 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_7 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_7 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_7 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_8 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_8 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_8 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_8 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_8 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_8 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_8 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_8 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_8 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_8 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_8 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_8 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_8 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_9 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, 
        Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_9 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_9 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_9 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_9 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_9 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_9 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_9 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_9 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_9 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_9 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), 
        .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), 
        .Y23(Y23) );
  muln_9 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), 
        .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), 
        .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .N0(
        N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_9 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_10 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_10 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_10 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_10 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AOI22_X1M_A9TR U5 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U6 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U7 ( .A(T3), .Y(n9) );
  AO21A1AI2_X1M_A9TR U8 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U9 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U10 ( .A(x0), .Y(n11) );
endmodule


module muln_10 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_10 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XOR2_X0P7M_A9TR U6 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U7 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U8 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U9 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U10 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U11 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U12 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U13 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U14 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U28 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U29 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U30 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_10 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_10 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_10 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_10 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_10 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_10 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_10 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_11 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_11 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_11 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_11 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_11 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_11 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_11 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_11 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_11 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_11 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_11 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_11 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_11 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_12 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_12 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_12 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_12 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_12 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_12 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_12 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_12 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_12 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_12 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_12 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_12 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_12 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_13 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_13 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_13 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_13 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_13 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_13 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_13 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_13 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_13 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_13 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_13 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_13 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_13 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_14 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_14 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_14 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_14 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AOI22_X1M_A9TR U5 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U6 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U7 ( .A(T3), .Y(n9) );
  AO21A1AI2_X1M_A9TR U8 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U9 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U10 ( .A(x0), .Y(n11) );
endmodule


module muln_14 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_14 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XOR2_X0P7M_A9TR U6 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U7 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U8 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U9 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U10 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U11 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U12 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U13 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U14 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U28 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U29 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U30 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_14 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_14 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_14 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_14 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_14 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_14 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_14 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_15 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_15 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_15 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_15 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_15 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_15 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U7 ( .A(n53), .B(N0), .Y(n18) );
  XNOR2_X0P7M_A9TR U8 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U9 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_15 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_15 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_15 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_15 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_15 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_15 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_15 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_16 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_16 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_16 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_16 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_16 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U13 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_16 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U25 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_16 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_16 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_16 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_16 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_16 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_16 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_16 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_1 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_1 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XOR2_X0P7M_A9TR U11 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  INV_X1M_A9TR U14 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U17 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U20 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U22 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U25 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XOR2_X0P7M_A9TR U29 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U36 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U38 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U40 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U41 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U42 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U43 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U44 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U45 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U46 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U47 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U48 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U49 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U50 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U51 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U52 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U53 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U54 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U55 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U60 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U61 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U62 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U63 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U64 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XNOR2_X0P7M_A9TR U66 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U68 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U69 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U72 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U73 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U74 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U76 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U77 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U78 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U80 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U81 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U82 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U83 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U84 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U85 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U86 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U88 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U93 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U94 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U95 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U96 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U97 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U98 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U99 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U100 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U102 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U103 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U104 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U110 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U115 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
endmodule


module mix_columns_2 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XOR2_X0P7M_A9TR U11 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  INV_X1M_A9TR U14 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U17 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U20 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U22 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U25 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U36 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U46 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U54 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U55 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U60 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U61 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U62 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U63 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U64 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XNOR2_X0P7M_A9TR U66 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U68 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U69 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U72 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U73 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U74 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U76 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U77 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U78 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U80 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U81 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U82 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U83 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U84 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U85 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U86 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U88 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U93 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U94 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U95 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U96 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U97 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U98 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U99 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U100 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U102 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U103 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U104 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U110 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U115 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
endmodule


module mix_columns_3 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XOR2_X0P7M_A9TR U11 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  INV_X1M_A9TR U14 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U17 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U20 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U22 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U25 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U36 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U38 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U40 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U41 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U42 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U43 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U44 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U45 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U46 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U47 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U48 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U49 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U50 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U51 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U52 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U53 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U54 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U55 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U60 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U61 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U62 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U63 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U64 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XNOR2_X0P7M_A9TR U66 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U68 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U69 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U72 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U73 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U74 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U76 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U77 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U78 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U80 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U81 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U82 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U83 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U84 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U85 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U86 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U88 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U93 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U94 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U95 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U96 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U97 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U98 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U99 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U100 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U102 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U103 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U104 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U110 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U115 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
endmodule


module mix_columns_4 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XOR2_X0P7M_A9TR U11 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U12 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  INV_X1M_A9TR U14 ( .A(n115), .Y(n163) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U17 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U20 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U22 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U25 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XOR2_X0P7M_A9TR U29 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U36 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U38 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U39 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U40 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U48 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U49 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U54 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U55 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U60 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U61 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U62 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U63 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U64 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XNOR2_X0P7M_A9TR U66 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U68 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U69 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U72 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U73 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U74 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U76 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U77 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U78 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U80 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U81 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U82 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U83 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U84 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U85 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U86 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U88 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U93 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U94 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U95 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U96 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U97 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U98 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U99 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U100 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U102 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U103 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U104 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U109 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U110 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U115 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
endmodule


module ARK_1 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122])
         );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126])
         );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110])
         );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
endmodule


module AES_256_roundop_1 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_16 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), 
        .byte_in(input_text[7:0]) );
  SubBytes_15 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_14 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_13 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), .byte_in(
        input_text[31:24]) );
  SubBytes_12 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_11 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_10 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_9 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_8 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_7 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_6 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), .byte_in(
        input_text[87:80]) );
  SubBytes_5 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), .byte_in(
        input_text[95:88]) );
  SubBytes_4 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), .byte_in(
        input_text[103:96]) );
  SubBytes_3 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_2 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_1 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_1 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_4 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_3 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_2 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_1 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_1 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module ftop_17 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_17 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_17 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_17 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_17 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_17 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_17 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_17 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_17 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_17 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_17 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_17 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_17 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_18 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_18 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_18 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_18 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_18 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_18 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_18 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_18 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_18 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_18 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_18 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_18 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_18 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_19 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_19 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_19 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_19 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_19 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_19 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_19 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_19 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_19 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_19 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_19 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_19 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_19 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_20 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_20 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_20 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_20 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_20 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_20 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_20 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_20 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_20 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_20 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_20 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_20 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_20 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_21 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_21 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_21 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_21 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_21 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_21 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_21 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_21 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_21 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_21 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_21 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_21 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_21 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_22 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_22 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_22 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_22 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_22 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_22 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_22 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_22 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_22 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_22 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_22 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_22 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_22 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_23 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_23 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_23 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_23 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_23 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_23 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_23 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_23 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_23 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_23 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_23 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_23 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_23 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_24 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_24 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_24 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_24 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_24 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_24 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_24 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_24 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_24 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_24 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_24 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_24 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_24 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_25 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_25 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_25 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_25 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_25 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_25 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_25 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_25 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_25 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_25 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_25 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_25 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_25 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_26 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_26 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_26 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_26 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_26 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_26 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_26 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_26 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_26 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_26 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_26 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_26 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_26 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_27 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_27 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_27 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_27 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_27 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_27 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_27 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_27 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_27 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_27 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_27 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_27 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_27 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_28 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_28 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_28 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_28 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_28 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_28 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_28 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_28 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_28 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_28 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_28 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_28 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_28 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_29 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_29 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_29 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_29 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_29 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_29 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_29 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_29 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_29 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_29 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_29 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_29 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_29 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_30 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_30 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_30 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_30 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_30 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_30 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_30 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_30 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_30 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_30 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_30 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_30 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_30 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_31 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_31 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_31 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_31 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_31 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_31 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_31 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_31 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_31 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_31 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_31 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_31 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_31 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_32 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_32 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_32 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_32 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_32 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_32 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_32 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_32 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_32 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_32 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_32 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_32 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_32 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_2 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_5 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U36 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U37 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U38 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U39 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U40 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U64 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U65 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U66 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U68 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U69 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U81 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U82 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U83 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U84 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U85 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U87 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U88 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U89 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U90 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U91 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U92 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U93 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U98 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U99 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U100 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U101 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U102 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U103 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U104 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U105 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U106 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U107 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U109 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U110 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U112 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_6 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U36 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U37 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U38 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U39 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U40 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U64 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U65 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U66 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U68 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U69 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U81 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U82 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U83 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U84 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U85 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U87 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U88 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U89 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U90 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U91 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U92 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U93 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U98 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U99 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U100 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U101 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U102 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U103 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U104 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U105 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U106 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U107 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U109 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U110 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U112 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_7 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U36 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U37 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U38 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U39 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U40 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U64 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U65 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U66 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U68 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U69 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U81 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U82 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U83 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U84 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U85 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U87 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U88 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U89 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U90 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U91 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U92 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U93 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U98 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U99 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U100 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U101 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U102 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U103 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U104 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U105 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U106 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U107 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U109 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U110 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U112 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_8 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U36 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U37 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U38 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U39 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U40 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U64 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U65 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U66 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U67 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U68 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U69 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U81 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U82 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U83 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U84 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U85 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U87 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U88 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U89 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U90 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U91 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U92 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U93 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U98 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U99 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U100 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U101 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U102 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U103 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U104 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U105 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U106 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U107 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U109 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U110 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U112 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module ARK_2 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113])
         );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126])
         );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
endmodule


module AES_256_roundop_2 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_32 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), 
        .byte_in(input_text[7:0]) );
  SubBytes_31 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_30 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_29 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), .byte_in(
        input_text[31:24]) );
  SubBytes_28 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_27 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_26 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_25 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_24 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_23 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_22 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), .byte_in(
        input_text[87:80]) );
  SubBytes_21 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), .byte_in(
        input_text[95:88]) );
  SubBytes_20 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), .byte_in(
        input_text[103:96]) );
  SubBytes_19 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_18 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_17 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_2 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_8 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_7 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_6 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_5 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_2 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module ftop_33 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_33 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_33 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_33 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_33 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_33 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_33 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_33 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_33 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_33 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_33 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_33 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_33 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_34 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XOR2_X0P7M_A9TR U18 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U19 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U20 ( .A(U3), .B(U0), .Y(n1) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_34 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_34 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_34 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_34 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_34 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_34 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_34 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_34 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_34 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_34 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_34 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_34 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_35 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_35 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_35 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_35 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_35 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_35 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_35 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_35 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_35 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_35 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_35 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_35 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_35 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_36 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_36 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_36 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_36 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_36 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_36 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_36 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_36 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_36 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_36 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_36 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_36 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_36 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_37 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_37 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_37 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_37 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_37 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_37 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_37 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_37 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_37 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_37 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_37 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_37 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_37 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_38 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XOR2_X0P7M_A9TR U18 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U19 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U20 ( .A(U3), .B(U0), .Y(n1) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_38 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_38 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_38 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_38 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_38 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_38 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_38 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_38 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_38 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_38 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_38 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_38 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_39 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_39 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_39 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_39 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_39 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_39 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_39 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_39 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_39 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_39 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_39 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_39 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_39 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_40 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_40 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_40 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_40 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_40 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_40 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_40 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_40 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_40 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_40 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_40 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_40 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_40 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_41 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_41 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_41 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_41 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_41 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_41 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_41 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_41 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_41 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_41 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_41 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_41 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_41 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_42 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_42 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_42 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_42 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_42 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_42 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_42 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_42 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_42 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_42 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_42 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_42 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_42 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_43 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_43 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_43 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_43 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_43 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_43 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_43 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_43 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_43 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_43 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_43 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_43 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_43 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_44 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_44 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_44 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_44 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_44 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_44 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_44 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_44 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_44 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_44 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_44 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_44 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_44 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_45 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_45 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_45 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_45 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_45 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_45 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_45 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_45 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_45 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_45 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_45 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_45 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_45 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_46 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XOR2_X0P7M_A9TR U18 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U19 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U20 ( .A(U3), .B(U0), .Y(n1) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_46 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_46 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_46 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_46 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_46 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_46 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_46 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_46 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_46 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_46 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_46 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_46 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_47 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_47 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_47 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_47 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_47 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_47 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_47 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_47 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_47 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_47 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_47 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_47 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_47 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_48 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_48 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_48 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_48 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_48 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_48 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_48 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_48 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_48 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_48 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_48 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_48 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_48 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_3 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_9 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U40 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U72 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U93 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_10 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U40 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U70 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U71 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U72 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U93 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_11 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U40 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U70 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U71 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U72 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U93 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_12 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U40 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U72 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U91 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U92 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U93 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module ARK_3 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103])
         );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110])
         );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
endmodule


module AES_256_roundop_3 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_48 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), 
        .byte_in(input_text[7:0]) );
  SubBytes_47 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_46 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_45 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), .byte_in(
        input_text[31:24]) );
  SubBytes_44 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_43 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_42 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_41 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_40 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_39 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_38 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), .byte_in(
        input_text[87:80]) );
  SubBytes_37 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), .byte_in(
        input_text[95:88]) );
  SubBytes_36 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), .byte_in(
        input_text[103:96]) );
  SubBytes_35 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_34 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_33 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_3 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_12 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_11 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_10 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_9 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_3 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module ftop_49 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_49 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_49 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_49 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_49 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_49 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_49 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_49 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_49 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_49 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_49 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_49 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_49 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_50 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_50 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_50 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_50 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_50 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_50 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_50 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_50 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_50 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_50 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_50 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_50 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_50 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_51 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_51 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_51 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_51 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_51 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_51 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_51 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_51 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_51 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_51 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_51 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_51 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_51 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_52 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_52 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_52 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_52 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_52 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_52 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_52 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_52 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_52 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_52 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_52 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_52 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_52 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_53 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_53 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_53 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_53 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_53 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_53 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_53 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_53 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_53 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_53 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_53 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_53 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_53 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_54 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_54 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_54 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_54 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_54 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_54 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_54 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_54 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_54 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_54 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_54 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_54 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_54 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_55 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_55 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_55 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_55 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_55 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_55 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_55 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_55 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_55 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_55 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_55 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_55 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_55 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_56 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_56 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  NOR2_X1A_A9TR U2 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U3 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U4 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U5 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U6 ( .A(Q9), .B(Q5), .Y(n31) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_56 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_56 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_56 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_56 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_56 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_56 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_56 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_56 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_56 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_56 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_56 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_57 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_57 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_57 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_57 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_57 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_57 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_57 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_57 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_57 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_57 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_57 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_57 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_57 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_58 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_58 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_58 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_58 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_58 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_58 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_58 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_58 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_58 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_58 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_58 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_58 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_58 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_59 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_59 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_59 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_59 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_59 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_59 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_59 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_59 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_59 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_59 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_59 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_59 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_59 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_60 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_60 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_60 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_60 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_60 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_60 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_60 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_60 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_60 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_60 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_60 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_60 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_60 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_61 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_61 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_61 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_61 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_61 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_61 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U21 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U22 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U23 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_61 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_61 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_61 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_61 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_61 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_61 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_61 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_62 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_62 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_62 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_62 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_62 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_62 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_62 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_62 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_62 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_62 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_62 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_62 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_62 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_63 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_63 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  XOR2_X0P7M_A9TR U11 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U12 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U13 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U14 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U15 ( .A(Q6), .B(Q12), .Y(n27) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_63 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_63 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_63 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_63 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_63 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_63 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_63 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_63 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_63 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_63 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_63 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_64 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_64 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_64 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_64 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_64 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_64 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_64 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_64 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_64 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_64 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_64 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_64 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_64 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_4 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_13 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_14 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XNOR2_X0P7M_A9TR U72 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_15 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XNOR2_X0P7M_A9TR U72 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_16 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U70 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U71 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XNOR2_X0P7M_A9TR U72 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module ARK_4 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113])
         );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126])
         );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
endmodule


module AES_256_roundop_4 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_64 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), 
        .byte_in(input_text[7:0]) );
  SubBytes_63 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_62 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_61 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), .byte_in(
        input_text[31:24]) );
  SubBytes_60 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_59 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_58 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_57 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_56 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_55 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_54 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), .byte_in(
        input_text[87:80]) );
  SubBytes_53 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), .byte_in(
        input_text[95:88]) );
  SubBytes_52 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), .byte_in(
        input_text[103:96]) );
  SubBytes_51 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_50 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_49 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_4 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_16 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_15 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_14 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_13 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_4 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module ftop_65 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_65 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_65 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_65 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_65 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_65 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_65 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_65 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_65 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_65 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_65 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_65 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_65 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_66 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_66 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_66 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_66 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_66 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_66 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_66 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_66 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_66 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_66 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_66 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_66 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_66 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_67 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_67 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_67 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_67 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_67 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_67 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_67 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_67 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_67 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_67 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_67 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_67 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_67 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_68 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_68 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_68 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_68 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_68 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_68 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_68 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_68 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_68 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_68 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_68 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_68 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_68 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_69 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_69 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_69 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_69 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_69 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_69 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_69 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_69 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_69 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_69 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_69 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_69 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_69 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_70 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_70 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_70 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_70 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_70 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_70 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_70 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_70 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_70 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_70 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_70 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_70 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_70 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_71 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_71 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_71 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_71 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_71 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_71 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_71 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_71 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_71 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_71 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_71 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_71 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_71 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_72 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_72 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_72 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_72 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_72 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_72 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_72 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_72 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_72 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_72 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_72 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_72 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_72 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_73 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_73 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_73 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_73 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_73 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_73 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_73 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_73 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_73 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_73 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_73 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_73 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_73 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_74 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_74 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  NOR2_X1A_A9TR U2 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U3 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U4 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U5 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U6 ( .A(Q9), .B(Q5), .Y(n31) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_74 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_74 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_74 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_74 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_74 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_74 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_74 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_74 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_74 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_74 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_74 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_75 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_75 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_75 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_75 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_75 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_75 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_75 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_75 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_75 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_75 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_75 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_75 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_75 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_76 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_76 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_76 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_76 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_76 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_76 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_76 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_76 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_76 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_76 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_76 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_76 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_76 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_77 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_77 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_77 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_77 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_77 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U9 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_77 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(N15), .B(N9), .Y(n43) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U21 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U22 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U23 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_77 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_77 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_77 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_77 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_77 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_77 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_77 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_78 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_78 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  NOR2_X1A_A9TR U2 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U3 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U4 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U5 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U6 ( .A(Q9), .B(Q5), .Y(n31) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_78 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_78 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_78 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_78 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_78 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_78 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_78 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_78 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_78 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_78 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_78 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_79 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_79 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_79 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_79 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_79 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_79 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U13 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U14 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_79 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_79 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_79 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_79 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_79 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_79 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_79 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_80 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U21 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_80 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_80 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_80 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_80 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U10 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U14 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_80 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_80 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_80 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_80 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_80 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_80 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_80 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_80 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_5 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_17 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U40 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U70 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U71 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U72 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U91 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U92 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U93 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_18 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U40 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U41 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U43 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U72 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U91 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U92 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U93 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_19 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U39 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U40 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U41 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U43 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U70 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U72 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U74 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U75 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U76 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U77 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U91 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U92 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U93 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module mix_columns_20 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U7 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U8 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U9 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  XOR2_X0P7M_A9TR U10 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  INV_X1M_A9TR U11 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U12 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XNOR2_X0P7M_A9TR U13 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U15 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  INV_X1M_A9TR U16 ( .A(n140), .Y(n162) );
  XOR2_X0P7M_A9TR U17 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U19 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U20 ( .A(mix_col_in[5]), .Y(n157) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XOR2_X0P7M_A9TR U28 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XNOR2_X0P7M_A9TR U30 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U32 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U33 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U34 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U35 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U37 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U38 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U39 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U40 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U41 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U42 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U43 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U44 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U45 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U46 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U47 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U48 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U49 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U50 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U51 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U52 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U53 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U54 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U55 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U56 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U57 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U58 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U59 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XNOR2_X0P7M_A9TR U60 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U62 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U63 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U64 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U66 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U67 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U68 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U69 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U70 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U71 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U72 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U73 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XOR2_X0P7M_A9TR U74 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U75 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U76 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U77 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U78 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U79 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U80 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U81 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U82 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U83 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U84 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U85 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U86 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U87 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U88 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U89 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U90 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U91 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U92 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U93 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U94 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U96 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U97 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U98 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U99 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U100 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U101 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U102 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
  XOR2_X0P7M_A9TR U103 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U104 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U105 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U106 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U107 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U108 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U109 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U110 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U111 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U112 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U113 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U114 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U115 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
endmodule


module ARK_5 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103])
         );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110])
         );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
endmodule


module AES_256_roundop_5 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_80 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), 
        .byte_in(input_text[7:0]) );
  SubBytes_79 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_78 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_77 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), .byte_in(
        input_text[31:24]) );
  SubBytes_76 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_75 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_74 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_73 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_72 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_71 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_70 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), .byte_in(
        input_text[87:80]) );
  SubBytes_69 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), .byte_in(
        input_text[95:88]) );
  SubBytes_68 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), .byte_in(
        input_text[103:96]) );
  SubBytes_67 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_66 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_65 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_5 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_20 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_19 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_18 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_17 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_5 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module ftop_81 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_81 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_81 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_81 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_81 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_81 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_81 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_81 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_81 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_81 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_81 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_81 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_81 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_82 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_82 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_82 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_82 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_82 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_82 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_82 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_82 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_82 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_82 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_82 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_82 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_82 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_83 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_83 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_83 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_83 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_83 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_83 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_83 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_83 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_83 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_83 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_83 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_83 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_83 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_84 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_84 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_84 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_84 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_84 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_84 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_84 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_84 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_84 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_84 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_84 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_84 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_84 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_85 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_85 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_85 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_85 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_85 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_85 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_85 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_85 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_85 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_85 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_85 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_85 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_85 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_86 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_86 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_86 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_86 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_86 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_86 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_86 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_86 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_86 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_86 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_86 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_86 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_86 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_87 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_87 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_87 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_87 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_87 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_87 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_87 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_87 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_87 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_87 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_87 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_87 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_87 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_88 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_88 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_88 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_88 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_88 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_88 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_88 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_88 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_88 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_88 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_88 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_88 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_88 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_89 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_89 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_89 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_89 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_89 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_89 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_89 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_89 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_89 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_89 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_89 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_89 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_89 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_90 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_90 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_90 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_90 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_90 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_90 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_90 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_90 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_90 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_90 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_90 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_90 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_90 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_91 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_91 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_91 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_91 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_91 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_91 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_91 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_91 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_91 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_91 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_91 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_91 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_91 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_92 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_92 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_92 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_92 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_92 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_92 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_92 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_92 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_92 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_92 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_92 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_92 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_92 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_93 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U18 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U19 ( .A(U7), .B(Q1), .Y(Q3) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U21 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U22 ( .A(U2), .B(n15), .Y(Q10) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_93 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_93 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_93 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_93 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U14 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U15 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_93 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XNOR2_X0P7M_A9TR U12 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U13 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U14 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U15 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U16 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U17 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U18 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_93 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_93 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_93 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_93 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_93 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_93 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_93 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_94 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_94 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_94 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_94 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_94 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U6 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U17 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_94 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U9 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U10 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U11 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U16 ( .A(n45), .B(n48), .Y(n54) );
  XNOR2_X0P7M_A9TR U17 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U18 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_94 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_94 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_94 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_94 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_94 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_94 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_94 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_95 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_95 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_95 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_95 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_95 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_95 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U4 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XNOR2_X0P7M_A9TR U8 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U9 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U10 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U11 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U12 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U13 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U14 ( .A(n54), .B(N16), .Y(n47) );
  XOR2_X0P7M_A9TR U15 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U16 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U17 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U18 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U19 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U20 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U21 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U22 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U23 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_95 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_95 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_95 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_95 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_95 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_95 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_95 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module ftop_96 ( U0, U1, U2, U3, U4, U5, U6, U7, Q0, Q1, Q2, Q3, Q4, Q5, Q6, 
        Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17 );
  input U0, U1, U2, U3, U4, U5, U6, U7;
  output Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  wire   U7, n1, n9, n10, n11, n12, n13, n14, n15;
  assign Q4 = U7;

  XNOR2_X0P7M_A9TR U100 ( .A(Q13), .B(n13), .Y(Q17) );
  INV_X1M_A9TR U200 ( .A(n15), .Y(Q13) );
  XOR2_X0P7M_A9TR U30 ( .A(n11), .B(n10), .Y(Q2) );
  XOR2_X0P7M_A9TR U40 ( .A(n13), .B(n14), .Y(n10) );
  XNOR2_X0P7M_A9TR U50 ( .A(Q11), .B(n13), .Y(Q14) );
  XOR2_X0P7M_A9TR U60 ( .A(Q11), .B(Q12), .Y(Q0) );
  XNOR2_X0P7M_A9TR U70 ( .A(n15), .B(Q12), .Y(Q5) );
  XNOR2_X0P7M_A9TR U8 ( .A(n15), .B(n14), .Y(Q9) );
  XOR2_X0P7M_A9TR U9 ( .A(U4), .B(U5), .Y(Q11) );
  XNOR2_X0P7M_A9TR U10 ( .A(Q11), .B(U6), .Y(n15) );
  XOR2_X0P7M_A9TR U11 ( .A(n9), .B(U0), .Y(n13) );
  XNOR2_X0P7M_A9TR U12 ( .A(U1), .B(U3), .Y(n9) );
  XNOR2_X0P7M_A9TR U13 ( .A(Q13), .B(n12), .Y(Q6) );
  XNOR2_X0P7M_A9TR U14 ( .A(U7), .B(U1), .Y(n12) );
  XNOR2_X0P7M_A9TR U15 ( .A(U6), .B(n13), .Y(Q16) );
  XNOR2_X0P7M_A9TR U16 ( .A(U5), .B(n13), .Y(Q8) );
  XNOR2_X0P7M_A9TR U17 ( .A(U4), .B(U6), .Y(n11) );
  XNOR2_X0P7M_A9TR U18 ( .A(n11), .B(n1), .Y(Q1) );
  XOR2_X0P7M_A9TR U19 ( .A(U3), .B(U0), .Y(n1) );
  XOR2_X0P7M_A9TR U20 ( .A(U7), .B(Q1), .Y(Q3) );
  XNOR2_X0P7M_A9TR U21 ( .A(U2), .B(n15), .Y(Q10) );
  XOR2_X0P7M_A9TR U22 ( .A(U7), .B(U2), .Y(n14) );
  XNOR2_X0P7M_A9TR U23 ( .A(n9), .B(U2), .Y(Q12) );
  XOR2_X0P7M_A9TR U24 ( .A(U1), .B(n14), .Y(Q7) );
  XOR2_X0P7M_A9TR U25 ( .A(U2), .B(U0), .Y(Q15) );
endmodule


module mulx_96 ( Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, 
        Q14, Q15, Q16, Q17, x0, x1, x2, x3 );
  input Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17;
  output x0, x1, x2, x3;
  wire   n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34,
         n35, n36, n37, n38, n39, n40;

  NAND2_X1A_A9TR U1 ( .A(Q2), .B(Q17), .Y(n37) );
  XOR2_X0P7M_A9TR U2 ( .A(n34), .B(n33), .Y(x2) );
  XOR2_X0P7M_A9TR U3 ( .A(n32), .B(n38), .Y(n33) );
  XOR2_X0P7M_A9TR U4 ( .A(n31), .B(n30), .Y(n34) );
  NAND2_X1A_A9TR U5 ( .A(Q9), .B(Q5), .Y(n31) );
  NOR2_X1A_A9TR U6 ( .A(Q17), .B(Q2), .Y(n30) );
  XOR2_X0P7M_A9TR U7 ( .A(n29), .B(n28), .Y(x1) );
  XOR2_X0P7M_A9TR U8 ( .A(n26), .B(n25), .Y(n29) );
  XOR2_X0P7M_A9TR U9 ( .A(n27), .B(n38), .Y(n28) );
  NAND2_X1A_A9TR U10 ( .A(Q11), .B(Q10), .Y(n26) );
  NAND2_X1A_A9TR U11 ( .A(Q6), .B(Q12), .Y(n27) );
  XOR2_X0P7M_A9TR U12 ( .A(n24), .B(n23), .Y(x0) );
  XOR2_X0P7M_A9TR U13 ( .A(n22), .B(n21), .Y(n24) );
  XOR2_X0P7M_A9TR U14 ( .A(n27), .B(n32), .Y(n23) );
  NAND2_X1A_A9TR U15 ( .A(Q7), .B(Q0), .Y(n22) );
  NAND2_X1A_A9TR U16 ( .A(Q3), .B(Q14), .Y(n38) );
  NAND2_X1A_A9TR U17 ( .A(Q16), .B(Q1), .Y(n32) );
  NOR2_X1A_A9TR U18 ( .A(Q15), .B(Q8), .Y(n35) );
  NOR2_X1A_A9TR U19 ( .A(Q14), .B(Q3), .Y(n21) );
  XOR2_X0P7M_A9TR U20 ( .A(n40), .B(n39), .Y(x3) );
  XOR2_X0P7M_A9TR U21 ( .A(n36), .B(n35), .Y(n40) );
  XOR2_X0P7M_A9TR U22 ( .A(n38), .B(n37), .Y(n39) );
  NAND2_X1A_A9TR U23 ( .A(Q4), .B(Q13), .Y(n36) );
  NOR2_X1A_A9TR U24 ( .A(Q13), .B(Q4), .Y(n25) );
endmodule


module inv_96 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3 );
  input x0, x1, x2, x3;
  output T0, T3, Y0, Y1, Y2, Y3;
  wire   n9, n10, n11, n12, n13, n14, n15;

  INV_X1M_A9TR U1 ( .A(x2), .Y(n13) );
  OAI22_X1M_A9TR U2 ( .A0(x2), .A1(n12), .B0(n15), .B1(n13), .Y(Y0) );
  INV_X1M_A9TR U3 ( .A(n10), .Y(n15) );
  NAND2_X1A_A9TR U4 ( .A(x2), .B(x0), .Y(T0) );
  OAI22BB_X1M_A9TR U5 ( .A0(x0), .A1(n14), .B0N(n10), .B1N(x0), .Y(Y2) );
  OAI22_X1M_A9TR U6 ( .A0(n15), .A1(n14), .B0(n11), .B1(n10), .Y(Y3) );
  NOR2_X1A_A9TR U7 ( .A(x0), .B(n12), .Y(n11) );
  NAND2_X1A_A9TR U8 ( .A(x1), .B(n13), .Y(T3) );
  INV_X1M_A9TR U9 ( .A(x1), .Y(n14) );
  XNOR2_X0P7M_A9TR U10 ( .A(T0), .B(n9), .Y(n10) );
  NOR2_X1A_A9TR U11 ( .A(x1), .B(x3), .Y(n9) );
  AO22_X1M_A9TR U12 ( .A0(n10), .A1(x3), .B0(T3), .B1(n15), .Y(Y1) );
  INV_X1M_A9TR U13 ( .A(x3), .Y(n12) );
endmodule


module s1_96 ( x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13, Y23
 );
  input x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3;
  output Y00, Y01, Y02, Y13, Y23;
  wire   n7, n8, n9, n10, n11;

  XOR2_X0P7M_A9TR U1 ( .A(Y2), .B(Y0), .Y(Y02) );
  INV_X1M_A9TR U2 ( .A(T0), .Y(n10) );
  XOR2_X0P7M_A9TR U3 ( .A(Y3), .B(Y1), .Y(Y13) );
  XOR2_X0P7M_A9TR U4 ( .A(Y01), .B(Y23), .Y(Y00) );
  AO21A1AI2_X1M_A9TR U5 ( .A0(x1), .A1(n10), .B0(n11), .C0(n8), .Y(Y23) );
  NAND3_X1A_A9TR U6 ( .A(x3), .B(n11), .C(x1), .Y(n8) );
  INV_X1M_A9TR U7 ( .A(x0), .Y(n11) );
  AOI22_X1M_A9TR U8 ( .A0(n10), .A1(x3), .B0(n7), .B1(T0), .Y(Y01) );
  OAI22_X1M_A9TR U9 ( .A0(T3), .A1(x3), .B0(x2), .B1(n9), .Y(n7) );
  INV_X1M_A9TR U10 ( .A(T3), .Y(n9) );
endmodule


module muln_96 ( Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, 
        Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17, N0, N1, N2, 
        N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15, N16, N17 );
  input Y00, Y01, Y02, Y0, Y1, Y2, Y3, Y13, Y23, Q0, Q1, Q2, Q3, Q4, Q5, Q6,
         Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15, Q16, Q17;
  output N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;


  NAND2_X1A_A9TR U1 ( .A(Y2), .B(Q9), .Y(N13) );
  NAND2_X1A_A9TR U2 ( .A(Q14), .B(Y13), .Y(N6) );
  NAND2_X1A_A9TR U3 ( .A(Q13), .B(Y02), .Y(N8) );
  NAND2_X1A_A9TR U4 ( .A(Q17), .B(Y23), .Y(N3) );
  NAND2_X1A_A9TR U5 ( .A(Q5), .B(Y2), .Y(N4) );
  NAND2_X1A_A9TR U6 ( .A(Q0), .B(Y1), .Y(N2) );
  NAND2_X1A_A9TR U7 ( .A(Y23), .B(Q2), .Y(N12) );
  NAND2_X1A_A9TR U8 ( .A(Y0), .B(Q10), .Y(N10) );
  NAND2_X1A_A9TR U9 ( .A(Y13), .B(Q3), .Y(N15) );
  NAND2_X1A_A9TR U10 ( .A(Y3), .B(Q8), .Y(N14) );
  NAND2_X1A_A9TR U11 ( .A(Q15), .B(Y3), .Y(N5) );
  NAND2_X1A_A9TR U12 ( .A(Q12), .B(Y0), .Y(N1) );
  NAND2_X1A_A9TR U13 ( .A(Y01), .B(Q7), .Y(N9) );
  NAND2_X1A_A9TR U14 ( .A(Y1), .B(Q6), .Y(N11) );
  NAND2_X1A_A9TR U15 ( .A(Q16), .B(Y00), .Y(N7) );
  NAND2_X1A_A9TR U16 ( .A(Y00), .B(Q1), .Y(N16) );
  NAND2_X1A_A9TR U17 ( .A(Q11), .B(Y01), .Y(N0) );
  NAND2_X1A_A9TR U18 ( .A(Y02), .B(Q4), .Y(N17) );
endmodule


module fbot_96 ( N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, 
        N14, N15, N16, N17, R0, R1, R2, R3, R4, R5, R6, R7 );
  input N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14, N15,
         N16, N17;
  output R0, R1, R2, R3, R4, R5, R6, R7;
  wire   n18, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44,
         n45, n46, n47, n48, n49, n50, n51, n52, n53, n54;

  XNOR2_X0P7M_A9TR U1 ( .A(n53), .B(n42), .Y(n44) );
  XNOR2_X0P7M_A9TR U2 ( .A(n42), .B(N3), .Y(R1) );
  XOR2_X0P7M_A9TR U3 ( .A(n49), .B(N13), .Y(n53) );
  XOR2_X0P7M_A9TR U4 ( .A(n45), .B(n44), .Y(R4) );
  XOR2_X0P7M_A9TR U5 ( .A(N16), .B(n44), .Y(R3) );
  XNOR2_X0P7M_A9TR U6 ( .A(n38), .B(N5), .Y(n42) );
  XNOR2_X0P7M_A9TR U7 ( .A(N8), .B(N6), .Y(n38) );
  XOR2_X0P7M_A9TR U8 ( .A(N15), .B(N9), .Y(n43) );
  XOR2_X0P7M_A9TR U9 ( .A(n45), .B(n48), .Y(n54) );
  XOR2_X0P7M_A9TR U10 ( .A(n47), .B(n46), .Y(R2) );
  XOR2_X0P7M_A9TR U11 ( .A(N5), .B(N2), .Y(n46) );
  XNOR2_X0P7M_A9TR U12 ( .A(n54), .B(N16), .Y(n47) );
  XNOR2_X0P7M_A9TR U13 ( .A(n18), .B(n54), .Y(R7) );
  XNOR2_X0P7M_A9TR U14 ( .A(n53), .B(N0), .Y(n18) );
  XOR2_X0P7M_A9TR U15 ( .A(n37), .B(n36), .Y(R5) );
  XOR2_X0P7M_A9TR U16 ( .A(n35), .B(n34), .Y(n36) );
  XOR2_X0P7M_A9TR U17 ( .A(n33), .B(n32), .Y(n37) );
  XOR2_X0P7M_A9TR U18 ( .A(N14), .B(N12), .Y(n35) );
  XOR2_X0P7M_A9TR U19 ( .A(N9), .B(N8), .Y(n33) );
  XOR2_X0P7M_A9TR U20 ( .A(n52), .B(n51), .Y(R6) );
  XOR2_X0P7M_A9TR U21 ( .A(N0), .B(n50), .Y(n51) );
  XOR2_X0P7M_A9TR U22 ( .A(n49), .B(n48), .Y(n52) );
  XOR2_X0P7M_A9TR U23 ( .A(N15), .B(N12), .Y(n50) );
  XOR2_X0P7M_A9TR U24 ( .A(N11), .B(N1), .Y(n34) );
  XOR2_X0P7M_A9TR U25 ( .A(N1), .B(N4), .Y(n48) );
  XOR2_X0P7M_A9TR U26 ( .A(n41), .B(N14), .Y(n49) );
  XOR2_X0P7M_A9TR U27 ( .A(n40), .B(n39), .Y(R0) );
  XOR2_X0P7M_A9TR U28 ( .A(n41), .B(N11), .Y(n40) );
  XNOR2_X0P7M_A9TR U29 ( .A(n42), .B(n43), .Y(n39) );
  XOR2_X0P7M_A9TR U30 ( .A(n43), .B(N10), .Y(n45) );
  XOR2_X0P7M_A9TR U31 ( .A(N7), .B(N2), .Y(n32) );
  XNOR2_X0P7M_A9TR U32 ( .A(N3), .B(N17), .Y(n41) );
endmodule


module SubBytes_96 ( byte_o, byte_in );
  output [7:0] byte_o;
  input [7:0] byte_in;
  wire   Q0, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15,
         Q16, Q17, x0, x1, x2, x3, T0, T3, Y0, Y1, Y2, Y3, Y00, Y01, Y02, Y13,
         Y23, N0, N1, N2, N3, N4, N5, N6, N7, N8, N9, N10, N11, N12, N13, N14,
         N15, N16, N17;

  ftop_96 ftop_inst ( .U0(byte_in[7]), .U1(byte_in[6]), .U2(byte_in[5]), .U3(
        byte_in[4]), .U4(byte_in[3]), .U5(byte_in[2]), .U6(byte_in[1]), .U7(
        byte_in[0]), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17) );
  mulx_96 mulx_inst ( .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), .Q4(Q4), .Q5(Q5), 
        .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(Q11), .Q12(Q12), 
        .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), .x0(x0), .x1(x1), .x2(x2), .x3(x3) );
  inv_96 inv_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(
        Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3) );
  s1_96 s1_inst ( .x0(x0), .x1(x1), .x2(x2), .x3(x3), .T0(T0), .T3(T3), .Y0(Y0), .Y1(Y1), .Y2(Y2), .Y3(Y3), .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y13(Y13), .Y23(
        Y23) );
  muln_96 muln_inst ( .Y00(Y00), .Y01(Y01), .Y02(Y02), .Y0(Y0), .Y1(Y1), .Y2(
        Y2), .Y3(Y3), .Y13(Y13), .Y23(Y23), .Q0(Q0), .Q1(Q1), .Q2(Q2), .Q3(Q3), 
        .Q4(Q4), .Q5(Q5), .Q6(Q6), .Q7(Q7), .Q8(Q8), .Q9(Q9), .Q10(Q10), .Q11(
        Q11), .Q12(Q12), .Q13(Q13), .Q14(Q14), .Q15(Q15), .Q16(Q16), .Q17(Q17), 
        .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), .N6(N6), .N7(N7), 
        .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17) );
  fbot_96 fbot_inst ( .N0(N0), .N1(N1), .N2(N2), .N3(N3), .N4(N4), .N5(N5), 
        .N6(N6), .N7(N7), .N8(N8), .N9(N9), .N10(N10), .N11(N11), .N12(N12), 
        .N13(N13), .N14(N14), .N15(N15), .N16(N16), .N17(N17), .R0(byte_o[7]), 
        .R1(byte_o[6]), .R2(byte_o[5]), .R3(byte_o[4]), .R4(byte_o[3]), .R5(
        byte_o[2]), .R6(byte_o[1]), .R7(byte_o[0]) );
endmodule


module shift_rows_6 ( shift_rows_o, shift_rows_in );
  output [127:0] shift_rows_o;
  input [127:0] shift_rows_in;

  assign shift_rows_o[127] = shift_rows_in[127];
  assign shift_rows_o[126] = shift_rows_in[126];
  assign shift_rows_o[125] = shift_rows_in[125];
  assign shift_rows_o[124] = shift_rows_in[124];
  assign shift_rows_o[123] = shift_rows_in[123];
  assign shift_rows_o[122] = shift_rows_in[122];
  assign shift_rows_o[121] = shift_rows_in[121];
  assign shift_rows_o[120] = shift_rows_in[120];
  assign shift_rows_o[119] = shift_rows_in[87];
  assign shift_rows_o[118] = shift_rows_in[86];
  assign shift_rows_o[117] = shift_rows_in[85];
  assign shift_rows_o[116] = shift_rows_in[84];
  assign shift_rows_o[115] = shift_rows_in[83];
  assign shift_rows_o[114] = shift_rows_in[82];
  assign shift_rows_o[113] = shift_rows_in[81];
  assign shift_rows_o[112] = shift_rows_in[80];
  assign shift_rows_o[111] = shift_rows_in[47];
  assign shift_rows_o[110] = shift_rows_in[46];
  assign shift_rows_o[109] = shift_rows_in[45];
  assign shift_rows_o[108] = shift_rows_in[44];
  assign shift_rows_o[107] = shift_rows_in[43];
  assign shift_rows_o[106] = shift_rows_in[42];
  assign shift_rows_o[105] = shift_rows_in[41];
  assign shift_rows_o[104] = shift_rows_in[40];
  assign shift_rows_o[103] = shift_rows_in[7];
  assign shift_rows_o[102] = shift_rows_in[6];
  assign shift_rows_o[101] = shift_rows_in[5];
  assign shift_rows_o[100] = shift_rows_in[4];
  assign shift_rows_o[99] = shift_rows_in[3];
  assign shift_rows_o[98] = shift_rows_in[2];
  assign shift_rows_o[97] = shift_rows_in[1];
  assign shift_rows_o[96] = shift_rows_in[0];
  assign shift_rows_o[95] = shift_rows_in[95];
  assign shift_rows_o[94] = shift_rows_in[94];
  assign shift_rows_o[93] = shift_rows_in[93];
  assign shift_rows_o[92] = shift_rows_in[92];
  assign shift_rows_o[91] = shift_rows_in[91];
  assign shift_rows_o[90] = shift_rows_in[90];
  assign shift_rows_o[89] = shift_rows_in[89];
  assign shift_rows_o[88] = shift_rows_in[88];
  assign shift_rows_o[87] = shift_rows_in[55];
  assign shift_rows_o[86] = shift_rows_in[54];
  assign shift_rows_o[85] = shift_rows_in[53];
  assign shift_rows_o[84] = shift_rows_in[52];
  assign shift_rows_o[83] = shift_rows_in[51];
  assign shift_rows_o[82] = shift_rows_in[50];
  assign shift_rows_o[81] = shift_rows_in[49];
  assign shift_rows_o[80] = shift_rows_in[48];
  assign shift_rows_o[79] = shift_rows_in[15];
  assign shift_rows_o[78] = shift_rows_in[14];
  assign shift_rows_o[77] = shift_rows_in[13];
  assign shift_rows_o[76] = shift_rows_in[12];
  assign shift_rows_o[75] = shift_rows_in[11];
  assign shift_rows_o[74] = shift_rows_in[10];
  assign shift_rows_o[73] = shift_rows_in[9];
  assign shift_rows_o[72] = shift_rows_in[8];
  assign shift_rows_o[71] = shift_rows_in[103];
  assign shift_rows_o[70] = shift_rows_in[102];
  assign shift_rows_o[69] = shift_rows_in[101];
  assign shift_rows_o[68] = shift_rows_in[100];
  assign shift_rows_o[67] = shift_rows_in[99];
  assign shift_rows_o[66] = shift_rows_in[98];
  assign shift_rows_o[65] = shift_rows_in[97];
  assign shift_rows_o[64] = shift_rows_in[96];
  assign shift_rows_o[63] = shift_rows_in[63];
  assign shift_rows_o[62] = shift_rows_in[62];
  assign shift_rows_o[61] = shift_rows_in[61];
  assign shift_rows_o[60] = shift_rows_in[60];
  assign shift_rows_o[59] = shift_rows_in[59];
  assign shift_rows_o[58] = shift_rows_in[58];
  assign shift_rows_o[57] = shift_rows_in[57];
  assign shift_rows_o[56] = shift_rows_in[56];
  assign shift_rows_o[55] = shift_rows_in[23];
  assign shift_rows_o[54] = shift_rows_in[22];
  assign shift_rows_o[53] = shift_rows_in[21];
  assign shift_rows_o[52] = shift_rows_in[20];
  assign shift_rows_o[51] = shift_rows_in[19];
  assign shift_rows_o[50] = shift_rows_in[18];
  assign shift_rows_o[49] = shift_rows_in[17];
  assign shift_rows_o[48] = shift_rows_in[16];
  assign shift_rows_o[47] = shift_rows_in[111];
  assign shift_rows_o[46] = shift_rows_in[110];
  assign shift_rows_o[45] = shift_rows_in[109];
  assign shift_rows_o[44] = shift_rows_in[108];
  assign shift_rows_o[43] = shift_rows_in[107];
  assign shift_rows_o[42] = shift_rows_in[106];
  assign shift_rows_o[41] = shift_rows_in[105];
  assign shift_rows_o[40] = shift_rows_in[104];
  assign shift_rows_o[39] = shift_rows_in[71];
  assign shift_rows_o[38] = shift_rows_in[70];
  assign shift_rows_o[37] = shift_rows_in[69];
  assign shift_rows_o[36] = shift_rows_in[68];
  assign shift_rows_o[35] = shift_rows_in[67];
  assign shift_rows_o[34] = shift_rows_in[66];
  assign shift_rows_o[33] = shift_rows_in[65];
  assign shift_rows_o[32] = shift_rows_in[64];
  assign shift_rows_o[31] = shift_rows_in[31];
  assign shift_rows_o[30] = shift_rows_in[30];
  assign shift_rows_o[29] = shift_rows_in[29];
  assign shift_rows_o[28] = shift_rows_in[28];
  assign shift_rows_o[27] = shift_rows_in[27];
  assign shift_rows_o[26] = shift_rows_in[26];
  assign shift_rows_o[25] = shift_rows_in[25];
  assign shift_rows_o[24] = shift_rows_in[24];
  assign shift_rows_o[23] = shift_rows_in[119];
  assign shift_rows_o[22] = shift_rows_in[118];
  assign shift_rows_o[21] = shift_rows_in[117];
  assign shift_rows_o[20] = shift_rows_in[116];
  assign shift_rows_o[19] = shift_rows_in[115];
  assign shift_rows_o[18] = shift_rows_in[114];
  assign shift_rows_o[17] = shift_rows_in[113];
  assign shift_rows_o[16] = shift_rows_in[112];
  assign shift_rows_o[15] = shift_rows_in[79];
  assign shift_rows_o[14] = shift_rows_in[78];
  assign shift_rows_o[13] = shift_rows_in[77];
  assign shift_rows_o[12] = shift_rows_in[76];
  assign shift_rows_o[11] = shift_rows_in[75];
  assign shift_rows_o[10] = shift_rows_in[74];
  assign shift_rows_o[9] = shift_rows_in[73];
  assign shift_rows_o[8] = shift_rows_in[72];
  assign shift_rows_o[7] = shift_rows_in[39];
  assign shift_rows_o[6] = shift_rows_in[38];
  assign shift_rows_o[5] = shift_rows_in[37];
  assign shift_rows_o[4] = shift_rows_in[36];
  assign shift_rows_o[3] = shift_rows_in[35];
  assign shift_rows_o[2] = shift_rows_in[34];
  assign shift_rows_o[1] = shift_rows_in[33];
  assign shift_rows_o[0] = shift_rows_in[32];

endmodule


module mix_columns_21 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_22 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  INV_X1M_A9TR U17 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U18 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_23 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module mix_columns_24 ( mix_col_o, mix_col_in );
  output [31:0] mix_col_o;
  input [31:0] mix_col_in;
  wire   n4, n6, n8, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94,
         n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105, n106,
         n107, n108, n109, n110, n111, n112, n113, n114, n115, n116, n117,
         n118, n119, n120, n121, n122, n123, n124, n125, n126, n127, n128,
         n129, n130, n131, n132, n133, n134, n135, n136, n137, n138, n139,
         n140, n141, n142, n143, n144, n145, n146, n147, n148, n149, n150,
         n151, n152, n153, n154, n155, n156, n157, n158, n159, n160, n161,
         n162, n163;

  INV_X1M_A9TR U1 ( .A(n120), .Y(n159) );
  INV_X1M_A9TR U2 ( .A(n123), .Y(n160) );
  INV_X1M_A9TR U3 ( .A(n114), .Y(n161) );
  INV_X1M_A9TR U4 ( .A(n93), .Y(n158) );
  XNOR2_X0P7M_A9TR U5 ( .A(mix_col_in[22]), .B(mix_col_in[30]), .Y(n146) );
  XNOR2_X0P7M_A9TR U6 ( .A(mix_col_in[14]), .B(mix_col_in[6]), .Y(n130) );
  XOR2_X0P7M_A9TR U7 ( .A(mix_col_in[19]), .B(mix_col_in[27]), .Y(n135) );
  XNOR2_X0P7M_A9TR U8 ( .A(mix_col_in[11]), .B(mix_col_in[3]), .Y(n120) );
  XOR2_X0P7M_A9TR U9 ( .A(mix_col_in[20]), .B(mix_col_in[28]), .Y(n139) );
  XNOR2_X0P7M_A9TR U10 ( .A(mix_col_in[12]), .B(mix_col_in[4]), .Y(n123) );
  INV_X1M_A9TR U11 ( .A(n140), .Y(n162) );
  INV_X1M_A9TR U12 ( .A(n115), .Y(n163) );
  XOR2_X0P7M_A9TR U13 ( .A(mix_col_in[0]), .B(mix_col_in[8]), .Y(n153) );
  XNOR2_X0P7M_A9TR U14 ( .A(mix_col_in[27]), .B(mix_col_in[3]), .Y(n138) );
  XOR2_X0P7M_A9TR U15 ( .A(mix_col_in[17]), .B(mix_col_in[25]), .Y(n154) );
  XOR2_X0P7M_A9TR U16 ( .A(mix_col_in[29]), .B(n157), .Y(n148) );
  XNOR2_X0P7M_A9TR U17 ( .A(mix_col_in[18]), .B(mix_col_in[27]), .Y(n98) );
  INV_X1M_A9TR U18 ( .A(mix_col_in[5]), .Y(n157) );
  XNOR2_X0P7M_A9TR U19 ( .A(mix_col_in[13]), .B(mix_col_in[21]), .Y(n143) );
  XNOR2_X0P7M_A9TR U20 ( .A(mix_col_in[19]), .B(mix_col_in[28]), .Y(n104) );
  XOR2_X0P7M_A9TR U21 ( .A(mix_col_in[16]), .B(mix_col_in[24]), .Y(n114) );
  XOR2_X0P7M_A9TR U22 ( .A(mix_col_in[18]), .B(mix_col_in[26]), .Y(n127) );
  XNOR2_X0P7M_A9TR U23 ( .A(mix_col_in[10]), .B(mix_col_in[2]), .Y(n119) );
  XNOR2_X0P7M_A9TR U24 ( .A(mix_col_in[1]), .B(mix_col_in[9]), .Y(n93) );
  XNOR2_X0P7M_A9TR U25 ( .A(mix_col_in[25]), .B(mix_col_in[8]), .Y(n92) );
  XNOR2_X0P7M_A9TR U26 ( .A(mix_col_in[24]), .B(mix_col_in[9]), .Y(n101) );
  XOR2_X0P7M_A9TR U27 ( .A(mix_col_in[2]), .B(mix_col_in[26]), .Y(n134) );
  XNOR2_X0P7M_A9TR U28 ( .A(mix_col_in[15]), .B(mix_col_in[7]), .Y(n152) );
  XNOR2_X0P7M_A9TR U29 ( .A(mix_col_in[31]), .B(mix_col_in[7]), .Y(n140) );
  XOR2_X0P7M_A9TR U30 ( .A(mix_col_in[23]), .B(mix_col_in[31]), .Y(n115) );
  XNOR2_X0P7M_A9TR U31 ( .A(mix_col_in[15]), .B(mix_col_in[23]), .Y(n105) );
  XOR2_X0P7M_A9TR U32 ( .A(n84), .B(n8), .Y(mix_col_o[11]) );
  XOR2_X0P7M_A9TR U33 ( .A(n152), .B(mix_col_in[3]), .Y(n84) );
  XOR2_X0P7M_A9TR U34 ( .A(n119), .B(n135), .Y(n8) );
  XOR2_X0P7M_A9TR U35 ( .A(n100), .B(n99), .Y(mix_col_o[19]) );
  XOR2_X0P7M_A9TR U36 ( .A(n98), .B(mix_col_in[10]), .Y(n100) );
  XOR2_X0P7M_A9TR U37 ( .A(n105), .B(n159), .Y(n99) );
  XOR2_X0P7M_A9TR U38 ( .A(n137), .B(n136), .Y(mix_col_o[3]) );
  XOR2_X0P7M_A9TR U39 ( .A(mix_col_in[11]), .B(n134), .Y(n137) );
  XOR2_X0P7M_A9TR U40 ( .A(n162), .B(n135), .Y(n136) );
  XOR2_X0P7M_A9TR U41 ( .A(n86), .B(n85), .Y(mix_col_o[12]) );
  XOR2_X0P7M_A9TR U42 ( .A(n152), .B(mix_col_in[4]), .Y(n86) );
  XOR2_X0P7M_A9TR U43 ( .A(n120), .B(n139), .Y(n85) );
  XOR2_X0P7M_A9TR U44 ( .A(n122), .B(n121), .Y(mix_col_o[27]) );
  XOR2_X0P7M_A9TR U45 ( .A(n163), .B(mix_col_in[19]), .Y(n122) );
  XOR2_X0P7M_A9TR U46 ( .A(n120), .B(n127), .Y(n121) );
  XOR2_X0P7M_A9TR U47 ( .A(n142), .B(n141), .Y(mix_col_o[4]) );
  XOR2_X0P7M_A9TR U48 ( .A(n138), .B(mix_col_in[12]), .Y(n142) );
  XOR2_X0P7M_A9TR U49 ( .A(n140), .B(n139), .Y(n141) );
  XOR2_X0P7M_A9TR U50 ( .A(n125), .B(n124), .Y(mix_col_o[28]) );
  XOR2_X0P7M_A9TR U51 ( .A(n163), .B(mix_col_in[20]), .Y(n125) );
  XOR2_X0P7M_A9TR U52 ( .A(n123), .B(n135), .Y(n124) );
  XOR2_X0P7M_A9TR U53 ( .A(n107), .B(n106), .Y(mix_col_o[20]) );
  XOR2_X0P7M_A9TR U54 ( .A(n104), .B(mix_col_in[11]), .Y(n107) );
  XOR2_X0P7M_A9TR U55 ( .A(n105), .B(n160), .Y(n106) );
  XOR2_X0P7M_A9TR U56 ( .A(n156), .B(n155), .Y(mix_col_o[9]) );
  XOR2_X0P7M_A9TR U57 ( .A(n152), .B(mix_col_in[1]), .Y(n156) );
  XNOR2_X0P7M_A9TR U58 ( .A(n154), .B(n153), .Y(n155) );
  XOR2_X0P7M_A9TR U59 ( .A(n119), .B(n118), .Y(mix_col_o[26]) );
  XNOR2_X0P7M_A9TR U60 ( .A(n154), .B(mix_col_in[18]), .Y(n118) );
  XOR2_X0P7M_A9TR U61 ( .A(n123), .B(n87), .Y(mix_col_o[13]) );
  XOR2_X0P7M_A9TR U62 ( .A(n148), .B(mix_col_in[21]), .Y(n87) );
  XOR2_X0P7M_A9TR U63 ( .A(n130), .B(n110), .Y(mix_col_o[22]) );
  XOR2_X0P7M_A9TR U64 ( .A(n143), .B(mix_col_in[30]), .Y(n110) );
  XOR2_X0P7M_A9TR U65 ( .A(n161), .B(n151), .Y(mix_col_o[8]) );
  XOR2_X0P7M_A9TR U66 ( .A(n152), .B(mix_col_in[0]), .Y(n151) );
  XOR2_X0P7M_A9TR U67 ( .A(n145), .B(n144), .Y(mix_col_o[5]) );
  XNOR2_X0P7M_A9TR U68 ( .A(mix_col_in[29]), .B(mix_col_in[4]), .Y(n145) );
  XOR2_X0P7M_A9TR U69 ( .A(n143), .B(mix_col_in[28]), .Y(n144) );
  XNOR2_X0P7M_A9TR U70 ( .A(n139), .B(n126), .Y(mix_col_o[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(n143), .B(mix_col_in[5]), .Y(n126) );
  XOR2_X0P7M_A9TR U72 ( .A(n163), .B(n113), .Y(mix_col_o[24]) );
  XNOR2_X0P7M_A9TR U73 ( .A(n153), .B(mix_col_in[16]), .Y(n113) );
  XOR2_X0P7M_A9TR U74 ( .A(n140), .B(n4), .Y(mix_col_o[0]) );
  XOR2_X0P7M_A9TR U75 ( .A(n161), .B(mix_col_in[8]), .Y(n4) );
  XOR2_X0P7M_A9TR U76 ( .A(n130), .B(n90), .Y(mix_col_o[15]) );
  XOR2_X0P7M_A9TR U77 ( .A(n163), .B(mix_col_in[7]), .Y(n90) );
  XOR2_X0P7M_A9TR U78 ( .A(n146), .B(n133), .Y(mix_col_o[31]) );
  XOR2_X0P7M_A9TR U79 ( .A(n152), .B(mix_col_in[23]), .Y(n133) );
  XOR2_X0P7M_A9TR U80 ( .A(n105), .B(n91), .Y(mix_col_o[16]) );
  XNOR2_X0P7M_A9TR U81 ( .A(n153), .B(mix_col_in[24]), .Y(n91) );
  XOR2_X0P7M_A9TR U82 ( .A(n109), .B(n108), .Y(mix_col_o[21]) );
  XNOR2_X0P7M_A9TR U83 ( .A(mix_col_in[13]), .B(mix_col_in[20]), .Y(n109) );
  XOR2_X0P7M_A9TR U84 ( .A(n148), .B(mix_col_in[12]), .Y(n108) );
  XOR2_X0P7M_A9TR U85 ( .A(n150), .B(n149), .Y(mix_col_o[7]) );
  XNOR2_X0P7M_A9TR U86 ( .A(mix_col_in[30]), .B(mix_col_in[6]), .Y(n150) );
  XOR2_X0P7M_A9TR U87 ( .A(n163), .B(mix_col_in[15]), .Y(n149) );
  XOR2_X0P7M_A9TR U88 ( .A(n89), .B(n88), .Y(mix_col_o[14]) );
  XOR2_X0P7M_A9TR U89 ( .A(n157), .B(mix_col_in[6]), .Y(n89) );
  XOR2_X0P7M_A9TR U90 ( .A(n146), .B(mix_col_in[13]), .Y(n88) );
  XOR2_X0P7M_A9TR U91 ( .A(n117), .B(n116), .Y(mix_col_o[25]) );
  XOR2_X0P7M_A9TR U92 ( .A(n115), .B(n158), .Y(n116) );
  XOR2_X0P7M_A9TR U93 ( .A(mix_col_in[17]), .B(n114), .Y(n117) );
  XOR2_X0P7M_A9TR U94 ( .A(n112), .B(n111), .Y(mix_col_o[23]) );
  XNOR2_X0P7M_A9TR U95 ( .A(mix_col_in[22]), .B(mix_col_in[31]), .Y(n112) );
  XOR2_X0P7M_A9TR U96 ( .A(n152), .B(mix_col_in[14]), .Y(n111) );
  XOR2_X0P7M_A9TR U97 ( .A(n93), .B(n6), .Y(mix_col_o[10]) );
  XNOR2_X0P7M_A9TR U98 ( .A(n127), .B(mix_col_in[2]), .Y(n6) );
  XOR2_X0P7M_A9TR U99 ( .A(n148), .B(n147), .Y(mix_col_o[6]) );
  XOR2_X0P7M_A9TR U100 ( .A(n146), .B(mix_col_in[14]), .Y(n147) );
  XOR2_X0P7M_A9TR U101 ( .A(n95), .B(n94), .Y(mix_col_o[17]) );
  XOR2_X0P7M_A9TR U102 ( .A(n92), .B(mix_col_in[16]), .Y(n95) );
  XOR2_X0P7M_A9TR U103 ( .A(n105), .B(n158), .Y(n94) );
  XOR2_X0P7M_A9TR U104 ( .A(n103), .B(n102), .Y(mix_col_o[1]) );
  XOR2_X0P7M_A9TR U105 ( .A(n101), .B(mix_col_in[0]), .Y(n103) );
  XOR2_X0P7M_A9TR U106 ( .A(n140), .B(n154), .Y(n102) );
  XOR2_X0P7M_A9TR U107 ( .A(n132), .B(n131), .Y(mix_col_o[30]) );
  XNOR2_X0P7M_A9TR U108 ( .A(mix_col_in[22]), .B(mix_col_in[29]), .Y(n132) );
  XOR2_X0P7M_A9TR U109 ( .A(n130), .B(mix_col_in[21]), .Y(n131) );
  XOR2_X0P7M_A9TR U110 ( .A(n129), .B(n128), .Y(mix_col_o[2]) );
  XNOR2_X0P7M_A9TR U111 ( .A(mix_col_in[1]), .B(mix_col_in[25]), .Y(n129) );
  XNOR2_X0P7M_A9TR U112 ( .A(n127), .B(mix_col_in[10]), .Y(n128) );
  XOR2_X0P7M_A9TR U113 ( .A(n97), .B(n96), .Y(mix_col_o[18]) );
  XNOR2_X0P7M_A9TR U114 ( .A(mix_col_in[26]), .B(mix_col_in[9]), .Y(n97) );
  XOR2_X0P7M_A9TR U115 ( .A(n119), .B(mix_col_in[17]), .Y(n96) );
endmodule


module ARK_6 ( ARK_out, ARK_in, ARK_key );
  output [127:0] ARK_out;
  input [127:0] ARK_in;
  input [127:0] ARK_key;


  XOR2_X0P7M_A9TR U1 ( .A(ARK_key[8]), .B(ARK_in[8]), .Y(ARK_out[8]) );
  XOR2_X0P7M_A9TR U2 ( .A(ARK_key[104]), .B(ARK_in[104]), .Y(ARK_out[104]) );
  XOR2_X0P7M_A9TR U3 ( .A(ARK_key[72]), .B(ARK_in[72]), .Y(ARK_out[72]) );
  XOR2_X0P7M_A9TR U4 ( .A(ARK_key[40]), .B(ARK_in[40]), .Y(ARK_out[40]) );
  XOR2_X0P7M_A9TR U5 ( .A(ARK_key[88]), .B(ARK_in[88]), .Y(ARK_out[88]) );
  XOR2_X0P7M_A9TR U6 ( .A(ARK_key[56]), .B(ARK_in[56]), .Y(ARK_out[56]) );
  XOR2_X0P7M_A9TR U7 ( .A(ARK_key[24]), .B(ARK_in[24]), .Y(ARK_out[24]) );
  XOR2_X0P7M_A9TR U8 ( .A(ARK_key[120]), .B(ARK_in[120]), .Y(ARK_out[120]) );
  XOR2_X0P7M_A9TR U9 ( .A(ARK_key[64]), .B(ARK_in[64]), .Y(ARK_out[64]) );
  XOR2_X0P7M_A9TR U10 ( .A(ARK_key[96]), .B(ARK_in[96]), .Y(ARK_out[96]) );
  XOR2_X0P7M_A9TR U11 ( .A(ARK_key[0]), .B(ARK_in[0]), .Y(ARK_out[0]) );
  XOR2_X0P7M_A9TR U12 ( .A(ARK_key[32]), .B(ARK_in[32]), .Y(ARK_out[32]) );
  XOR2_X0P7M_A9TR U13 ( .A(ARK_key[16]), .B(ARK_in[16]), .Y(ARK_out[16]) );
  XOR2_X0P7M_A9TR U14 ( .A(ARK_key[48]), .B(ARK_in[48]), .Y(ARK_out[48]) );
  XOR2_X0P7M_A9TR U15 ( .A(ARK_key[80]), .B(ARK_in[80]), .Y(ARK_out[80]) );
  XOR2_X0P7M_A9TR U16 ( .A(ARK_key[112]), .B(ARK_in[112]), .Y(ARK_out[112]) );
  XOR2_X0P7M_A9TR U17 ( .A(ARK_key[11]), .B(ARK_in[11]), .Y(ARK_out[11]) );
  XOR2_X0P7M_A9TR U18 ( .A(ARK_key[107]), .B(ARK_in[107]), .Y(ARK_out[107]) );
  XOR2_X0P7M_A9TR U19 ( .A(ARK_key[75]), .B(ARK_in[75]), .Y(ARK_out[75]) );
  XOR2_X0P7M_A9TR U20 ( .A(ARK_key[43]), .B(ARK_in[43]), .Y(ARK_out[43]) );
  XOR2_X0P7M_A9TR U21 ( .A(ARK_key[19]), .B(ARK_in[19]), .Y(ARK_out[19]) );
  XOR2_X0P7M_A9TR U22 ( .A(ARK_key[51]), .B(ARK_in[51]), .Y(ARK_out[51]) );
  XOR2_X0P7M_A9TR U23 ( .A(ARK_key[83]), .B(ARK_in[83]), .Y(ARK_out[83]) );
  XOR2_X0P7M_A9TR U24 ( .A(ARK_key[115]), .B(ARK_in[115]), .Y(ARK_out[115]) );
  XOR2_X0P7M_A9TR U25 ( .A(ARK_key[67]), .B(ARK_in[67]), .Y(ARK_out[67]) );
  XOR2_X0P7M_A9TR U26 ( .A(ARK_key[99]), .B(ARK_in[99]), .Y(ARK_out[99]) );
  XOR2_X0P7M_A9TR U27 ( .A(ARK_key[35]), .B(ARK_in[35]), .Y(ARK_out[35]) );
  XOR2_X0P7M_A9TR U28 ( .A(ARK_key[3]), .B(ARK_in[3]), .Y(ARK_out[3]) );
  XOR2_X0P7M_A9TR U29 ( .A(ARK_key[12]), .B(ARK_in[12]), .Y(ARK_out[12]) );
  XOR2_X0P7M_A9TR U30 ( .A(ARK_key[108]), .B(ARK_in[108]), .Y(ARK_out[108]) );
  XOR2_X0P7M_A9TR U31 ( .A(ARK_key[76]), .B(ARK_in[76]), .Y(ARK_out[76]) );
  XOR2_X0P7M_A9TR U32 ( .A(ARK_key[44]), .B(ARK_in[44]), .Y(ARK_out[44]) );
  XOR2_X0P7M_A9TR U33 ( .A(ARK_key[91]), .B(ARK_in[91]), .Y(ARK_out[91]) );
  XOR2_X0P7M_A9TR U34 ( .A(ARK_key[59]), .B(ARK_in[59]), .Y(ARK_out[59]) );
  XOR2_X0P7M_A9TR U35 ( .A(ARK_key[27]), .B(ARK_in[27]), .Y(ARK_out[27]) );
  XOR2_X0P7M_A9TR U36 ( .A(ARK_key[123]), .B(ARK_in[123]), .Y(ARK_out[123]) );
  XOR2_X0P7M_A9TR U37 ( .A(ARK_key[68]), .B(ARK_in[68]), .Y(ARK_out[68]) );
  XOR2_X0P7M_A9TR U38 ( .A(ARK_key[100]), .B(ARK_in[100]), .Y(ARK_out[100]) );
  XOR2_X0P7M_A9TR U39 ( .A(ARK_key[4]), .B(ARK_in[4]), .Y(ARK_out[4]) );
  XOR2_X0P7M_A9TR U40 ( .A(ARK_key[36]), .B(ARK_in[36]), .Y(ARK_out[36]) );
  XOR2_X0P7M_A9TR U41 ( .A(ARK_key[92]), .B(ARK_in[92]), .Y(ARK_out[92]) );
  XOR2_X0P7M_A9TR U42 ( .A(ARK_key[60]), .B(ARK_in[60]), .Y(ARK_out[60]) );
  XOR2_X0P7M_A9TR U43 ( .A(ARK_key[28]), .B(ARK_in[28]), .Y(ARK_out[28]) );
  XOR2_X0P7M_A9TR U44 ( .A(ARK_key[124]), .B(ARK_in[124]), .Y(ARK_out[124]) );
  XOR2_X0P7M_A9TR U45 ( .A(ARK_key[20]), .B(ARK_in[20]), .Y(ARK_out[20]) );
  XOR2_X0P7M_A9TR U46 ( .A(ARK_key[52]), .B(ARK_in[52]), .Y(ARK_out[52]) );
  XOR2_X0P7M_A9TR U47 ( .A(ARK_key[116]), .B(ARK_in[116]), .Y(ARK_out[116]) );
  XOR2_X0P7M_A9TR U48 ( .A(ARK_key[84]), .B(ARK_in[84]), .Y(ARK_out[84]) );
  XOR2_X0P7M_A9TR U49 ( .A(ARK_key[9]), .B(ARK_in[9]), .Y(ARK_out[9]) );
  XOR2_X0P7M_A9TR U50 ( .A(ARK_key[105]), .B(ARK_in[105]), .Y(ARK_out[105]) );
  XOR2_X0P7M_A9TR U51 ( .A(ARK_key[73]), .B(ARK_in[73]), .Y(ARK_out[73]) );
  XOR2_X0P7M_A9TR U52 ( .A(ARK_key[41]), .B(ARK_in[41]), .Y(ARK_out[41]) );
  XOR2_X0P7M_A9TR U53 ( .A(ARK_key[90]), .B(ARK_in[90]), .Y(ARK_out[90]) );
  XOR2_X0P7M_A9TR U54 ( .A(ARK_key[58]), .B(ARK_in[58]), .Y(ARK_out[58]) );
  XOR2_X0P7M_A9TR U55 ( .A(ARK_key[26]), .B(ARK_in[26]), .Y(ARK_out[26]) );
  XOR2_X0P7M_A9TR U56 ( .A(ARK_key[122]), .B(ARK_in[122]), .Y(ARK_out[122]) );
  XOR2_X0P7M_A9TR U57 ( .A(ARK_key[13]), .B(ARK_in[13]), .Y(ARK_out[13]) );
  XOR2_X0P7M_A9TR U58 ( .A(ARK_key[109]), .B(ARK_in[109]), .Y(ARK_out[109]) );
  XOR2_X0P7M_A9TR U59 ( .A(ARK_key[77]), .B(ARK_in[77]), .Y(ARK_out[77]) );
  XOR2_X0P7M_A9TR U60 ( .A(ARK_key[45]), .B(ARK_in[45]), .Y(ARK_out[45]) );
  XOR2_X0P7M_A9TR U61 ( .A(ARK_key[22]), .B(ARK_in[22]), .Y(ARK_out[22]) );
  XOR2_X0P7M_A9TR U62 ( .A(ARK_key[54]), .B(ARK_in[54]), .Y(ARK_out[54]) );
  XOR2_X0P7M_A9TR U63 ( .A(ARK_key[118]), .B(ARK_in[118]), .Y(ARK_out[118]) );
  XOR2_X0P7M_A9TR U64 ( .A(ARK_key[86]), .B(ARK_in[86]), .Y(ARK_out[86]) );
  XOR2_X0P7M_A9TR U65 ( .A(ARK_key[69]), .B(ARK_in[69]), .Y(ARK_out[69]) );
  XOR2_X0P7M_A9TR U66 ( .A(ARK_key[101]), .B(ARK_in[101]), .Y(ARK_out[101]) );
  XOR2_X0P7M_A9TR U67 ( .A(ARK_key[37]), .B(ARK_in[37]), .Y(ARK_out[37]) );
  XOR2_X0P7M_A9TR U68 ( .A(ARK_key[5]), .B(ARK_in[5]), .Y(ARK_out[5]) );
  XOR2_X0P7M_A9TR U69 ( .A(ARK_key[93]), .B(ARK_in[93]), .Y(ARK_out[93]) );
  XOR2_X0P7M_A9TR U70 ( .A(ARK_key[29]), .B(ARK_in[29]), .Y(ARK_out[29]) );
  XOR2_X0P7M_A9TR U71 ( .A(ARK_key[61]), .B(ARK_in[61]), .Y(ARK_out[61]) );
  XOR2_X0P7M_A9TR U72 ( .A(ARK_key[125]), .B(ARK_in[125]), .Y(ARK_out[125]) );
  XOR2_X0P7M_A9TR U73 ( .A(ARK_key[15]), .B(ARK_in[15]), .Y(ARK_out[15]) );
  XOR2_X0P7M_A9TR U74 ( .A(ARK_key[111]), .B(ARK_in[111]), .Y(ARK_out[111]) );
  XOR2_X0P7M_A9TR U75 ( .A(ARK_key[47]), .B(ARK_in[47]), .Y(ARK_out[47]) );
  XOR2_X0P7M_A9TR U76 ( .A(ARK_key[79]), .B(ARK_in[79]), .Y(ARK_out[79]) );
  XOR2_X0P7M_A9TR U77 ( .A(ARK_key[95]), .B(ARK_in[95]), .Y(ARK_out[95]) );
  XOR2_X0P7M_A9TR U78 ( .A(ARK_key[63]), .B(ARK_in[63]), .Y(ARK_out[63]) );
  XOR2_X0P7M_A9TR U79 ( .A(ARK_key[31]), .B(ARK_in[31]), .Y(ARK_out[31]) );
  XOR2_X0P7M_A9TR U80 ( .A(ARK_key[127]), .B(ARK_in[127]), .Y(ARK_out[127]) );
  XOR2_X0P7M_A9TR U81 ( .A(ARK_key[21]), .B(ARK_in[21]), .Y(ARK_out[21]) );
  XOR2_X0P7M_A9TR U82 ( .A(ARK_key[53]), .B(ARK_in[53]), .Y(ARK_out[53]) );
  XOR2_X0P7M_A9TR U83 ( .A(ARK_key[117]), .B(ARK_in[117]), .Y(ARK_out[117]) );
  XOR2_X0P7M_A9TR U84 ( .A(ARK_key[85]), .B(ARK_in[85]), .Y(ARK_out[85]) );
  XOR2_X0P7M_A9TR U85 ( .A(ARK_key[71]), .B(ARK_in[71]), .Y(ARK_out[71]) );
  XOR2_X0P7M_A9TR U86 ( .A(ARK_key[103]), .B(ARK_in[103]), .Y(ARK_out[103]) );
  XOR2_X0P7M_A9TR U87 ( .A(ARK_key[7]), .B(ARK_in[7]), .Y(ARK_out[7]) );
  XOR2_X0P7M_A9TR U88 ( .A(ARK_key[39]), .B(ARK_in[39]), .Y(ARK_out[39]) );
  XOR2_X0P7M_A9TR U89 ( .A(ARK_key[14]), .B(ARK_in[14]), .Y(ARK_out[14]) );
  XOR2_X0P7M_A9TR U90 ( .A(ARK_key[110]), .B(ARK_in[110]), .Y(ARK_out[110]) );
  XOR2_X0P7M_A9TR U91 ( .A(ARK_key[78]), .B(ARK_in[78]), .Y(ARK_out[78]) );
  XOR2_X0P7M_A9TR U92 ( .A(ARK_key[46]), .B(ARK_in[46]), .Y(ARK_out[46]) );
  XOR2_X0P7M_A9TR U93 ( .A(ARK_key[89]), .B(ARK_in[89]), .Y(ARK_out[89]) );
  XOR2_X0P7M_A9TR U94 ( .A(ARK_key[25]), .B(ARK_in[25]), .Y(ARK_out[25]) );
  XOR2_X0P7M_A9TR U95 ( .A(ARK_key[57]), .B(ARK_in[57]), .Y(ARK_out[57]) );
  XOR2_X0P7M_A9TR U96 ( .A(ARK_key[121]), .B(ARK_in[121]), .Y(ARK_out[121]) );
  XOR2_X0P7M_A9TR U97 ( .A(ARK_key[23]), .B(ARK_in[23]), .Y(ARK_out[23]) );
  XOR2_X0P7M_A9TR U98 ( .A(ARK_key[55]), .B(ARK_in[55]), .Y(ARK_out[55]) );
  XOR2_X0P7M_A9TR U99 ( .A(ARK_key[87]), .B(ARK_in[87]), .Y(ARK_out[87]) );
  XOR2_X0P7M_A9TR U100 ( .A(ARK_key[119]), .B(ARK_in[119]), .Y(ARK_out[119])
         );
  XOR2_X0P7M_A9TR U101 ( .A(ARK_key[10]), .B(ARK_in[10]), .Y(ARK_out[10]) );
  XOR2_X0P7M_A9TR U102 ( .A(ARK_key[106]), .B(ARK_in[106]), .Y(ARK_out[106])
         );
  XOR2_X0P7M_A9TR U103 ( .A(ARK_key[74]), .B(ARK_in[74]), .Y(ARK_out[74]) );
  XOR2_X0P7M_A9TR U104 ( .A(ARK_key[42]), .B(ARK_in[42]), .Y(ARK_out[42]) );
  XOR2_X0P7M_A9TR U105 ( .A(ARK_key[70]), .B(ARK_in[70]), .Y(ARK_out[70]) );
  XOR2_X0P7M_A9TR U106 ( .A(ARK_key[102]), .B(ARK_in[102]), .Y(ARK_out[102])
         );
  XOR2_X0P7M_A9TR U107 ( .A(ARK_key[6]), .B(ARK_in[6]), .Y(ARK_out[6]) );
  XOR2_X0P7M_A9TR U108 ( .A(ARK_key[38]), .B(ARK_in[38]), .Y(ARK_out[38]) );
  XOR2_X0P7M_A9TR U109 ( .A(ARK_key[17]), .B(ARK_in[17]), .Y(ARK_out[17]) );
  XOR2_X0P7M_A9TR U110 ( .A(ARK_key[49]), .B(ARK_in[49]), .Y(ARK_out[49]) );
  XOR2_X0P7M_A9TR U111 ( .A(ARK_key[113]), .B(ARK_in[113]), .Y(ARK_out[113])
         );
  XOR2_X0P7M_A9TR U112 ( .A(ARK_key[81]), .B(ARK_in[81]), .Y(ARK_out[81]) );
  XOR2_X0P7M_A9TR U113 ( .A(ARK_key[65]), .B(ARK_in[65]), .Y(ARK_out[65]) );
  XOR2_X0P7M_A9TR U114 ( .A(ARK_key[97]), .B(ARK_in[97]), .Y(ARK_out[97]) );
  XOR2_X0P7M_A9TR U115 ( .A(ARK_key[33]), .B(ARK_in[33]), .Y(ARK_out[33]) );
  XOR2_X0P7M_A9TR U116 ( .A(ARK_key[1]), .B(ARK_in[1]), .Y(ARK_out[1]) );
  XOR2_X0P7M_A9TR U117 ( .A(ARK_key[94]), .B(ARK_in[94]), .Y(ARK_out[94]) );
  XOR2_X0P7M_A9TR U118 ( .A(ARK_key[62]), .B(ARK_in[62]), .Y(ARK_out[62]) );
  XOR2_X0P7M_A9TR U119 ( .A(ARK_key[30]), .B(ARK_in[30]), .Y(ARK_out[30]) );
  XOR2_X0P7M_A9TR U120 ( .A(ARK_key[126]), .B(ARK_in[126]), .Y(ARK_out[126])
         );
  XOR2_X0P7M_A9TR U121 ( .A(ARK_key[66]), .B(ARK_in[66]), .Y(ARK_out[66]) );
  XOR2_X0P7M_A9TR U122 ( .A(ARK_key[98]), .B(ARK_in[98]), .Y(ARK_out[98]) );
  XOR2_X0P7M_A9TR U123 ( .A(ARK_key[34]), .B(ARK_in[34]), .Y(ARK_out[34]) );
  XOR2_X0P7M_A9TR U124 ( .A(ARK_key[2]), .B(ARK_in[2]), .Y(ARK_out[2]) );
  XOR2_X0P7M_A9TR U125 ( .A(ARK_key[18]), .B(ARK_in[18]), .Y(ARK_out[18]) );
  XOR2_X0P7M_A9TR U126 ( .A(ARK_key[50]), .B(ARK_in[50]), .Y(ARK_out[50]) );
  XOR2_X0P7M_A9TR U127 ( .A(ARK_key[82]), .B(ARK_in[82]), .Y(ARK_out[82]) );
  XOR2_X0P7M_A9TR U128 ( .A(ARK_key[114]), .B(ARK_in[114]), .Y(ARK_out[114])
         );
endmodule


module AES_256_roundop_6 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;

  wire   [127:0] subBytes_o;
  wire   [127:0] sr_out;
  wire   [127:0] mc_out;

  SubBytes_96 genblk1_0__dut_subBytes ( .byte_o(subBytes_o[127:120]), 
        .byte_in(input_text[7:0]) );
  SubBytes_95 genblk1_1__dut_subBytes ( .byte_o(subBytes_o[119:112]), 
        .byte_in(input_text[15:8]) );
  SubBytes_94 genblk1_2__dut_subBytes ( .byte_o(subBytes_o[111:104]), 
        .byte_in(input_text[23:16]) );
  SubBytes_93 genblk1_3__dut_subBytes ( .byte_o(subBytes_o[103:96]), .byte_in(
        input_text[31:24]) );
  SubBytes_92 genblk1_4__dut_subBytes ( .byte_o(subBytes_o[95:88]), .byte_in(
        input_text[39:32]) );
  SubBytes_91 genblk1_5__dut_subBytes ( .byte_o(subBytes_o[87:80]), .byte_in(
        input_text[47:40]) );
  SubBytes_90 genblk1_6__dut_subBytes ( .byte_o(subBytes_o[79:72]), .byte_in(
        input_text[55:48]) );
  SubBytes_89 genblk1_7__dut_subBytes ( .byte_o(subBytes_o[71:64]), .byte_in(
        input_text[63:56]) );
  SubBytes_88 genblk1_8__dut_subBytes ( .byte_o(subBytes_o[63:56]), .byte_in(
        input_text[71:64]) );
  SubBytes_87 genblk1_9__dut_subBytes ( .byte_o(subBytes_o[55:48]), .byte_in(
        input_text[79:72]) );
  SubBytes_86 genblk1_10__dut_subBytes ( .byte_o(subBytes_o[47:40]), .byte_in(
        input_text[87:80]) );
  SubBytes_85 genblk1_11__dut_subBytes ( .byte_o(subBytes_o[39:32]), .byte_in(
        input_text[95:88]) );
  SubBytes_84 genblk1_12__dut_subBytes ( .byte_o(subBytes_o[31:24]), .byte_in(
        input_text[103:96]) );
  SubBytes_83 genblk1_13__dut_subBytes ( .byte_o(subBytes_o[23:16]), .byte_in(
        input_text[111:104]) );
  SubBytes_82 genblk1_14__dut_subBytes ( .byte_o(subBytes_o[15:8]), .byte_in(
        input_text[119:112]) );
  SubBytes_81 genblk1_15__dut_subBytes ( .byte_o(subBytes_o[7:0]), .byte_in(
        input_text[127:120]) );
  shift_rows_6 sr_dut ( .shift_rows_o(sr_out), .shift_rows_in({subBytes_o[7:0], 
        subBytes_o[15:8], subBytes_o[23:16], subBytes_o[31:24], 
        subBytes_o[39:32], subBytes_o[47:40], subBytes_o[55:48], 
        subBytes_o[63:56], subBytes_o[71:64], subBytes_o[79:72], 
        subBytes_o[87:80], subBytes_o[95:88], subBytes_o[103:96], 
        subBytes_o[111:104], subBytes_o[119:112], subBytes_o[127:120]}) );
  mix_columns_24 genblk2_0__mc_dut ( .mix_col_o(mc_out[127:96]), .mix_col_in(
        sr_out[127:96]) );
  mix_columns_23 genblk2_1__mc_dut ( .mix_col_o(mc_out[95:64]), .mix_col_in(
        sr_out[95:64]) );
  mix_columns_22 genblk2_2__mc_dut ( .mix_col_o(mc_out[63:32]), .mix_col_in(
        sr_out[63:32]) );
  mix_columns_21 genblk2_3__mc_dut ( .mix_col_o(mc_out[31:0]), .mix_col_in(
        sr_out[31:0]) );
  ARK_6 ark_dut ( .ARK_out(output_text), .ARK_in(mc_out), .ARK_key(round_key)
         );
endmodule


module AES_256_unrolling_7 ( output_text, input_text, round_key );
  output [127:0] output_text;
  input [127:0] input_text;
  input [127:0] round_key;
  wire   op_out_0__127_, op_out_0__126_, op_out_0__125_, op_out_0__124_,
         op_out_0__123_, op_out_0__122_, op_out_0__121_, op_out_0__120_,
         op_out_0__119_, op_out_0__118_, op_out_0__117_, op_out_0__116_,
         op_out_0__115_, op_out_0__114_, op_out_0__113_, op_out_0__112_,
         op_out_0__111_, op_out_0__110_, op_out_0__109_, op_out_0__108_,
         op_out_0__107_, op_out_0__106_, op_out_0__105_, op_out_0__104_,
         op_out_0__103_, op_out_0__102_, op_out_0__101_, op_out_0__100_,
         op_out_0__99_, op_out_0__98_, op_out_0__97_, op_out_0__96_,
         op_out_0__95_, op_out_0__94_, op_out_0__93_, op_out_0__92_,
         op_out_0__91_, op_out_0__90_, op_out_0__89_, op_out_0__88_,
         op_out_0__87_, op_out_0__86_, op_out_0__85_, op_out_0__84_,
         op_out_0__83_, op_out_0__82_, op_out_0__81_, op_out_0__80_,
         op_out_0__79_, op_out_0__78_, op_out_0__77_, op_out_0__76_,
         op_out_0__75_, op_out_0__74_, op_out_0__73_, op_out_0__72_,
         op_out_0__71_, op_out_0__70_, op_out_0__69_, op_out_0__68_,
         op_out_0__67_, op_out_0__66_, op_out_0__65_, op_out_0__64_,
         op_out_0__63_, op_out_0__62_, op_out_0__61_, op_out_0__60_,
         op_out_0__59_, op_out_0__58_, op_out_0__57_, op_out_0__56_,
         op_out_0__55_, op_out_0__54_, op_out_0__53_, op_out_0__52_,
         op_out_0__51_, op_out_0__50_, op_out_0__49_, op_out_0__48_,
         op_out_0__47_, op_out_0__46_, op_out_0__45_, op_out_0__44_,
         op_out_0__43_, op_out_0__42_, op_out_0__41_, op_out_0__40_,
         op_out_0__39_, op_out_0__38_, op_out_0__37_, op_out_0__36_,
         op_out_0__35_, op_out_0__34_, op_out_0__33_, op_out_0__32_,
         op_out_0__31_, op_out_0__30_, op_out_0__29_, op_out_0__28_,
         op_out_0__27_, op_out_0__26_, op_out_0__25_, op_out_0__24_,
         op_out_0__23_, op_out_0__22_, op_out_0__21_, op_out_0__20_,
         op_out_0__19_, op_out_0__18_, op_out_0__17_, op_out_0__16_,
         op_out_0__15_, op_out_0__14_, op_out_0__13_, op_out_0__12_,
         op_out_0__11_, op_out_0__10_, op_out_0__9_, op_out_0__8_,
         op_out_0__7_, op_out_0__6_, op_out_0__5_, op_out_0__4_, op_out_0__3_,
         op_out_0__2_, op_out_0__1_, op_out_0__0_, op_out_1__127_,
         op_out_1__126_, op_out_1__125_, op_out_1__124_, op_out_1__123_,
         op_out_1__122_, op_out_1__121_, op_out_1__120_, op_out_1__119_,
         op_out_1__118_, op_out_1__117_, op_out_1__116_, op_out_1__115_,
         op_out_1__114_, op_out_1__113_, op_out_1__112_, op_out_1__111_,
         op_out_1__110_, op_out_1__109_, op_out_1__108_, op_out_1__107_,
         op_out_1__106_, op_out_1__105_, op_out_1__104_, op_out_1__103_,
         op_out_1__102_, op_out_1__101_, op_out_1__100_, op_out_1__99_,
         op_out_1__98_, op_out_1__97_, op_out_1__96_, op_out_1__95_,
         op_out_1__94_, op_out_1__93_, op_out_1__92_, op_out_1__91_,
         op_out_1__90_, op_out_1__89_, op_out_1__88_, op_out_1__87_,
         op_out_1__86_, op_out_1__85_, op_out_1__84_, op_out_1__83_,
         op_out_1__82_, op_out_1__81_, op_out_1__80_, op_out_1__79_,
         op_out_1__78_, op_out_1__77_, op_out_1__76_, op_out_1__75_,
         op_out_1__74_, op_out_1__73_, op_out_1__72_, op_out_1__71_,
         op_out_1__70_, op_out_1__69_, op_out_1__68_, op_out_1__67_,
         op_out_1__66_, op_out_1__65_, op_out_1__64_, op_out_1__63_,
         op_out_1__62_, op_out_1__61_, op_out_1__60_, op_out_1__59_,
         op_out_1__58_, op_out_1__57_, op_out_1__56_, op_out_1__55_,
         op_out_1__54_, op_out_1__53_, op_out_1__52_, op_out_1__51_,
         op_out_1__50_, op_out_1__49_, op_out_1__48_, op_out_1__47_,
         op_out_1__46_, op_out_1__45_, op_out_1__44_, op_out_1__43_,
         op_out_1__42_, op_out_1__41_, op_out_1__40_, op_out_1__39_,
         op_out_1__38_, op_out_1__37_, op_out_1__36_, op_out_1__35_,
         op_out_1__34_, op_out_1__33_, op_out_1__32_, op_out_1__31_,
         op_out_1__30_, op_out_1__29_, op_out_1__28_, op_out_1__27_,
         op_out_1__26_, op_out_1__25_, op_out_1__24_, op_out_1__23_,
         op_out_1__22_, op_out_1__21_, op_out_1__20_, op_out_1__19_,
         op_out_1__18_, op_out_1__17_, op_out_1__16_, op_out_1__15_,
         op_out_1__14_, op_out_1__13_, op_out_1__12_, op_out_1__11_,
         op_out_1__10_, op_out_1__9_, op_out_1__8_, op_out_1__7_, op_out_1__6_,
         op_out_1__5_, op_out_1__4_, op_out_1__3_, op_out_1__2_, op_out_1__1_,
         op_out_1__0_, op_out_2__127_, op_out_2__126_, op_out_2__125_,
         op_out_2__124_, op_out_2__123_, op_out_2__122_, op_out_2__121_,
         op_out_2__120_, op_out_2__119_, op_out_2__118_, op_out_2__117_,
         op_out_2__116_, op_out_2__115_, op_out_2__114_, op_out_2__113_,
         op_out_2__112_, op_out_2__111_, op_out_2__110_, op_out_2__109_,
         op_out_2__108_, op_out_2__107_, op_out_2__106_, op_out_2__105_,
         op_out_2__104_, op_out_2__103_, op_out_2__102_, op_out_2__101_,
         op_out_2__100_, op_out_2__99_, op_out_2__98_, op_out_2__97_,
         op_out_2__96_, op_out_2__95_, op_out_2__94_, op_out_2__93_,
         op_out_2__92_, op_out_2__91_, op_out_2__90_, op_out_2__89_,
         op_out_2__88_, op_out_2__87_, op_out_2__86_, op_out_2__85_,
         op_out_2__84_, op_out_2__83_, op_out_2__82_, op_out_2__81_,
         op_out_2__80_, op_out_2__79_, op_out_2__78_, op_out_2__77_,
         op_out_2__76_, op_out_2__75_, op_out_2__74_, op_out_2__73_,
         op_out_2__72_, op_out_2__71_, op_out_2__70_, op_out_2__69_,
         op_out_2__68_, op_out_2__67_, op_out_2__66_, op_out_2__65_,
         op_out_2__64_, op_out_2__63_, op_out_2__62_, op_out_2__61_,
         op_out_2__60_, op_out_2__59_, op_out_2__58_, op_out_2__57_,
         op_out_2__56_, op_out_2__55_, op_out_2__54_, op_out_2__53_,
         op_out_2__52_, op_out_2__51_, op_out_2__50_, op_out_2__49_,
         op_out_2__48_, op_out_2__47_, op_out_2__46_, op_out_2__45_,
         op_out_2__44_, op_out_2__43_, op_out_2__42_, op_out_2__41_,
         op_out_2__40_, op_out_2__39_, op_out_2__38_, op_out_2__37_,
         op_out_2__36_, op_out_2__35_, op_out_2__34_, op_out_2__33_,
         op_out_2__32_, op_out_2__31_, op_out_2__30_, op_out_2__29_,
         op_out_2__28_, op_out_2__27_, op_out_2__26_, op_out_2__25_,
         op_out_2__24_, op_out_2__23_, op_out_2__22_, op_out_2__21_,
         op_out_2__20_, op_out_2__19_, op_out_2__18_, op_out_2__17_,
         op_out_2__16_, op_out_2__15_, op_out_2__14_, op_out_2__13_,
         op_out_2__12_, op_out_2__11_, op_out_2__10_, op_out_2__9_,
         op_out_2__8_, op_out_2__7_, op_out_2__6_, op_out_2__5_, op_out_2__4_,
         op_out_2__3_, op_out_2__2_, op_out_2__1_, op_out_2__0_,
         op_out_3__127_, op_out_3__126_, op_out_3__125_, op_out_3__124_,
         op_out_3__123_, op_out_3__122_, op_out_3__121_, op_out_3__120_,
         op_out_3__119_, op_out_3__118_, op_out_3__117_, op_out_3__116_,
         op_out_3__115_, op_out_3__114_, op_out_3__113_, op_out_3__112_,
         op_out_3__111_, op_out_3__110_, op_out_3__109_, op_out_3__108_,
         op_out_3__107_, op_out_3__106_, op_out_3__105_, op_out_3__104_,
         op_out_3__103_, op_out_3__102_, op_out_3__101_, op_out_3__100_,
         op_out_3__99_, op_out_3__98_, op_out_3__97_, op_out_3__96_,
         op_out_3__95_, op_out_3__94_, op_out_3__93_, op_out_3__92_,
         op_out_3__91_, op_out_3__90_, op_out_3__89_, op_out_3__88_,
         op_out_3__87_, op_out_3__86_, op_out_3__85_, op_out_3__84_,
         op_out_3__83_, op_out_3__82_, op_out_3__81_, op_out_3__80_,
         op_out_3__79_, op_out_3__78_, op_out_3__77_, op_out_3__76_,
         op_out_3__75_, op_out_3__74_, op_out_3__73_, op_out_3__72_,
         op_out_3__71_, op_out_3__70_, op_out_3__69_, op_out_3__68_,
         op_out_3__67_, op_out_3__66_, op_out_3__65_, op_out_3__64_,
         op_out_3__63_, op_out_3__62_, op_out_3__61_, op_out_3__60_,
         op_out_3__59_, op_out_3__58_, op_out_3__57_, op_out_3__56_,
         op_out_3__55_, op_out_3__54_, op_out_3__53_, op_out_3__52_,
         op_out_3__51_, op_out_3__50_, op_out_3__49_, op_out_3__48_,
         op_out_3__47_, op_out_3__46_, op_out_3__45_, op_out_3__44_,
         op_out_3__43_, op_out_3__42_, op_out_3__41_, op_out_3__40_,
         op_out_3__39_, op_out_3__38_, op_out_3__37_, op_out_3__36_,
         op_out_3__35_, op_out_3__34_, op_out_3__33_, op_out_3__32_,
         op_out_3__31_, op_out_3__30_, op_out_3__29_, op_out_3__28_,
         op_out_3__27_, op_out_3__26_, op_out_3__25_, op_out_3__24_,
         op_out_3__23_, op_out_3__22_, op_out_3__21_, op_out_3__20_,
         op_out_3__19_, op_out_3__18_, op_out_3__17_, op_out_3__16_,
         op_out_3__15_, op_out_3__14_, op_out_3__13_, op_out_3__12_,
         op_out_3__11_, op_out_3__10_, op_out_3__9_, op_out_3__8_,
         op_out_3__7_, op_out_3__6_, op_out_3__5_, op_out_3__4_, op_out_3__3_,
         op_out_3__2_, op_out_3__1_, op_out_3__0_, op_out_4__127_,
         op_out_4__126_, op_out_4__125_, op_out_4__124_, op_out_4__123_,
         op_out_4__122_, op_out_4__121_, op_out_4__120_, op_out_4__119_,
         op_out_4__118_, op_out_4__117_, op_out_4__116_, op_out_4__115_,
         op_out_4__114_, op_out_4__113_, op_out_4__112_, op_out_4__111_,
         op_out_4__110_, op_out_4__109_, op_out_4__108_, op_out_4__107_,
         op_out_4__106_, op_out_4__105_, op_out_4__104_, op_out_4__103_,
         op_out_4__102_, op_out_4__101_, op_out_4__100_, op_out_4__99_,
         op_out_4__98_, op_out_4__97_, op_out_4__96_, op_out_4__95_,
         op_out_4__94_, op_out_4__93_, op_out_4__92_, op_out_4__91_,
         op_out_4__90_, op_out_4__89_, op_out_4__88_, op_out_4__87_,
         op_out_4__86_, op_out_4__85_, op_out_4__84_, op_out_4__83_,
         op_out_4__82_, op_out_4__81_, op_out_4__80_, op_out_4__79_,
         op_out_4__78_, op_out_4__77_, op_out_4__76_, op_out_4__75_,
         op_out_4__74_, op_out_4__73_, op_out_4__72_, op_out_4__71_,
         op_out_4__70_, op_out_4__69_, op_out_4__68_, op_out_4__67_,
         op_out_4__66_, op_out_4__65_, op_out_4__64_, op_out_4__63_,
         op_out_4__62_, op_out_4__61_, op_out_4__60_, op_out_4__59_,
         op_out_4__58_, op_out_4__57_, op_out_4__56_, op_out_4__55_,
         op_out_4__54_, op_out_4__53_, op_out_4__52_, op_out_4__51_,
         op_out_4__50_, op_out_4__49_, op_out_4__48_, op_out_4__47_,
         op_out_4__46_, op_out_4__45_, op_out_4__44_, op_out_4__43_,
         op_out_4__42_, op_out_4__41_, op_out_4__40_, op_out_4__39_,
         op_out_4__38_, op_out_4__37_, op_out_4__36_, op_out_4__35_,
         op_out_4__34_, op_out_4__33_, op_out_4__32_, op_out_4__31_,
         op_out_4__30_, op_out_4__29_, op_out_4__28_, op_out_4__27_,
         op_out_4__26_, op_out_4__25_, op_out_4__24_, op_out_4__23_,
         op_out_4__22_, op_out_4__21_, op_out_4__20_, op_out_4__19_,
         op_out_4__18_, op_out_4__17_, op_out_4__16_, op_out_4__15_,
         op_out_4__14_, op_out_4__13_, op_out_4__12_, op_out_4__11_,
         op_out_4__10_, op_out_4__9_, op_out_4__8_, op_out_4__7_, op_out_4__6_,
         op_out_4__5_, op_out_4__4_, op_out_4__3_, op_out_4__2_, op_out_4__1_,
         op_out_4__0_, op_out_5__127_, op_out_5__126_, op_out_5__125_,
         op_out_5__124_, op_out_5__123_, op_out_5__122_, op_out_5__121_,
         op_out_5__120_, op_out_5__119_, op_out_5__118_, op_out_5__117_,
         op_out_5__116_, op_out_5__115_, op_out_5__114_, op_out_5__113_,
         op_out_5__112_, op_out_5__111_, op_out_5__110_, op_out_5__109_,
         op_out_5__108_, op_out_5__107_, op_out_5__106_, op_out_5__105_,
         op_out_5__104_, op_out_5__103_, op_out_5__102_, op_out_5__101_,
         op_out_5__100_, op_out_5__99_, op_out_5__98_, op_out_5__97_,
         op_out_5__96_, op_out_5__95_, op_out_5__94_, op_out_5__93_,
         op_out_5__92_, op_out_5__91_, op_out_5__90_, op_out_5__89_,
         op_out_5__88_, op_out_5__87_, op_out_5__86_, op_out_5__85_,
         op_out_5__84_, op_out_5__83_, op_out_5__82_, op_out_5__81_,
         op_out_5__80_, op_out_5__79_, op_out_5__78_, op_out_5__77_,
         op_out_5__76_, op_out_5__75_, op_out_5__74_, op_out_5__73_,
         op_out_5__72_, op_out_5__71_, op_out_5__70_, op_out_5__69_,
         op_out_5__68_, op_out_5__67_, op_out_5__66_, op_out_5__65_,
         op_out_5__64_, op_out_5__63_, op_out_5__62_, op_out_5__61_,
         op_out_5__60_, op_out_5__59_, op_out_5__58_, op_out_5__57_,
         op_out_5__56_, op_out_5__55_, op_out_5__54_, op_out_5__53_,
         op_out_5__52_, op_out_5__51_, op_out_5__50_, op_out_5__49_,
         op_out_5__48_, op_out_5__47_, op_out_5__46_, op_out_5__45_,
         op_out_5__44_, op_out_5__43_, op_out_5__42_, op_out_5__41_,
         op_out_5__40_, op_out_5__39_, op_out_5__38_, op_out_5__37_,
         op_out_5__36_, op_out_5__35_, op_out_5__34_, op_out_5__33_,
         op_out_5__32_, op_out_5__31_, op_out_5__30_, op_out_5__29_,
         op_out_5__28_, op_out_5__27_, op_out_5__26_, op_out_5__25_,
         op_out_5__24_, op_out_5__23_, op_out_5__22_, op_out_5__21_,
         op_out_5__20_, op_out_5__19_, op_out_5__18_, op_out_5__17_,
         op_out_5__16_, op_out_5__15_, op_out_5__14_, op_out_5__13_,
         op_out_5__12_, op_out_5__11_, op_out_5__10_, op_out_5__9_,
         op_out_5__8_, op_out_5__7_, op_out_5__6_, op_out_5__5_, op_out_5__4_,
         op_out_5__3_, op_out_5__2_, op_out_5__1_, op_out_5__0_;

  AES_256_roundop_0 op1 ( .output_text({op_out_0__127_, op_out_0__126_, 
        op_out_0__125_, op_out_0__124_, op_out_0__123_, op_out_0__122_, 
        op_out_0__121_, op_out_0__120_, op_out_0__119_, op_out_0__118_, 
        op_out_0__117_, op_out_0__116_, op_out_0__115_, op_out_0__114_, 
        op_out_0__113_, op_out_0__112_, op_out_0__111_, op_out_0__110_, 
        op_out_0__109_, op_out_0__108_, op_out_0__107_, op_out_0__106_, 
        op_out_0__105_, op_out_0__104_, op_out_0__103_, op_out_0__102_, 
        op_out_0__101_, op_out_0__100_, op_out_0__99_, op_out_0__98_, 
        op_out_0__97_, op_out_0__96_, op_out_0__95_, op_out_0__94_, 
        op_out_0__93_, op_out_0__92_, op_out_0__91_, op_out_0__90_, 
        op_out_0__89_, op_out_0__88_, op_out_0__87_, op_out_0__86_, 
        op_out_0__85_, op_out_0__84_, op_out_0__83_, op_out_0__82_, 
        op_out_0__81_, op_out_0__80_, op_out_0__79_, op_out_0__78_, 
        op_out_0__77_, op_out_0__76_, op_out_0__75_, op_out_0__74_, 
        op_out_0__73_, op_out_0__72_, op_out_0__71_, op_out_0__70_, 
        op_out_0__69_, op_out_0__68_, op_out_0__67_, op_out_0__66_, 
        op_out_0__65_, op_out_0__64_, op_out_0__63_, op_out_0__62_, 
        op_out_0__61_, op_out_0__60_, op_out_0__59_, op_out_0__58_, 
        op_out_0__57_, op_out_0__56_, op_out_0__55_, op_out_0__54_, 
        op_out_0__53_, op_out_0__52_, op_out_0__51_, op_out_0__50_, 
        op_out_0__49_, op_out_0__48_, op_out_0__47_, op_out_0__46_, 
        op_out_0__45_, op_out_0__44_, op_out_0__43_, op_out_0__42_, 
        op_out_0__41_, op_out_0__40_, op_out_0__39_, op_out_0__38_, 
        op_out_0__37_, op_out_0__36_, op_out_0__35_, op_out_0__34_, 
        op_out_0__33_, op_out_0__32_, op_out_0__31_, op_out_0__30_, 
        op_out_0__29_, op_out_0__28_, op_out_0__27_, op_out_0__26_, 
        op_out_0__25_, op_out_0__24_, op_out_0__23_, op_out_0__22_, 
        op_out_0__21_, op_out_0__20_, op_out_0__19_, op_out_0__18_, 
        op_out_0__17_, op_out_0__16_, op_out_0__15_, op_out_0__14_, 
        op_out_0__13_, op_out_0__12_, op_out_0__11_, op_out_0__10_, 
        op_out_0__9_, op_out_0__8_, op_out_0__7_, op_out_0__6_, op_out_0__5_, 
        op_out_0__4_, op_out_0__3_, op_out_0__2_, op_out_0__1_, op_out_0__0_}), 
        .input_text(input_text), .round_key(round_key) );
  AES_256_roundop_6 op2 ( .output_text({op_out_1__127_, op_out_1__126_, 
        op_out_1__125_, op_out_1__124_, op_out_1__123_, op_out_1__122_, 
        op_out_1__121_, op_out_1__120_, op_out_1__119_, op_out_1__118_, 
        op_out_1__117_, op_out_1__116_, op_out_1__115_, op_out_1__114_, 
        op_out_1__113_, op_out_1__112_, op_out_1__111_, op_out_1__110_, 
        op_out_1__109_, op_out_1__108_, op_out_1__107_, op_out_1__106_, 
        op_out_1__105_, op_out_1__104_, op_out_1__103_, op_out_1__102_, 
        op_out_1__101_, op_out_1__100_, op_out_1__99_, op_out_1__98_, 
        op_out_1__97_, op_out_1__96_, op_out_1__95_, op_out_1__94_, 
        op_out_1__93_, op_out_1__92_, op_out_1__91_, op_out_1__90_, 
        op_out_1__89_, op_out_1__88_, op_out_1__87_, op_out_1__86_, 
        op_out_1__85_, op_out_1__84_, op_out_1__83_, op_out_1__82_, 
        op_out_1__81_, op_out_1__80_, op_out_1__79_, op_out_1__78_, 
        op_out_1__77_, op_out_1__76_, op_out_1__75_, op_out_1__74_, 
        op_out_1__73_, op_out_1__72_, op_out_1__71_, op_out_1__70_, 
        op_out_1__69_, op_out_1__68_, op_out_1__67_, op_out_1__66_, 
        op_out_1__65_, op_out_1__64_, op_out_1__63_, op_out_1__62_, 
        op_out_1__61_, op_out_1__60_, op_out_1__59_, op_out_1__58_, 
        op_out_1__57_, op_out_1__56_, op_out_1__55_, op_out_1__54_, 
        op_out_1__53_, op_out_1__52_, op_out_1__51_, op_out_1__50_, 
        op_out_1__49_, op_out_1__48_, op_out_1__47_, op_out_1__46_, 
        op_out_1__45_, op_out_1__44_, op_out_1__43_, op_out_1__42_, 
        op_out_1__41_, op_out_1__40_, op_out_1__39_, op_out_1__38_, 
        op_out_1__37_, op_out_1__36_, op_out_1__35_, op_out_1__34_, 
        op_out_1__33_, op_out_1__32_, op_out_1__31_, op_out_1__30_, 
        op_out_1__29_, op_out_1__28_, op_out_1__27_, op_out_1__26_, 
        op_out_1__25_, op_out_1__24_, op_out_1__23_, op_out_1__22_, 
        op_out_1__21_, op_out_1__20_, op_out_1__19_, op_out_1__18_, 
        op_out_1__17_, op_out_1__16_, op_out_1__15_, op_out_1__14_, 
        op_out_1__13_, op_out_1__12_, op_out_1__11_, op_out_1__10_, 
        op_out_1__9_, op_out_1__8_, op_out_1__7_, op_out_1__6_, op_out_1__5_, 
        op_out_1__4_, op_out_1__3_, op_out_1__2_, op_out_1__1_, op_out_1__0_}), 
        .input_text({op_out_0__127_, op_out_0__126_, op_out_0__125_, 
        op_out_0__124_, op_out_0__123_, op_out_0__122_, op_out_0__121_, 
        op_out_0__120_, op_out_0__119_, op_out_0__118_, op_out_0__117_, 
        op_out_0__116_, op_out_0__115_, op_out_0__114_, op_out_0__113_, 
        op_out_0__112_, op_out_0__111_, op_out_0__110_, op_out_0__109_, 
        op_out_0__108_, op_out_0__107_, op_out_0__106_, op_out_0__105_, 
        op_out_0__104_, op_out_0__103_, op_out_0__102_, op_out_0__101_, 
        op_out_0__100_, op_out_0__99_, op_out_0__98_, op_out_0__97_, 
        op_out_0__96_, op_out_0__95_, op_out_0__94_, op_out_0__93_, 
        op_out_0__92_, op_out_0__91_, op_out_0__90_, op_out_0__89_, 
        op_out_0__88_, op_out_0__87_, op_out_0__86_, op_out_0__85_, 
        op_out_0__84_, op_out_0__83_, op_out_0__82_, op_out_0__81_, 
        op_out_0__80_, op_out_0__79_, op_out_0__78_, op_out_0__77_, 
        op_out_0__76_, op_out_0__75_, op_out_0__74_, op_out_0__73_, 
        op_out_0__72_, op_out_0__71_, op_out_0__70_, op_out_0__69_, 
        op_out_0__68_, op_out_0__67_, op_out_0__66_, op_out_0__65_, 
        op_out_0__64_, op_out_0__63_, op_out_0__62_, op_out_0__61_, 
        op_out_0__60_, op_out_0__59_, op_out_0__58_, op_out_0__57_, 
        op_out_0__56_, op_out_0__55_, op_out_0__54_, op_out_0__53_, 
        op_out_0__52_, op_out_0__51_, op_out_0__50_, op_out_0__49_, 
        op_out_0__48_, op_out_0__47_, op_out_0__46_, op_out_0__45_, 
        op_out_0__44_, op_out_0__43_, op_out_0__42_, op_out_0__41_, 
        op_out_0__40_, op_out_0__39_, op_out_0__38_, op_out_0__37_, 
        op_out_0__36_, op_out_0__35_, op_out_0__34_, op_out_0__33_, 
        op_out_0__32_, op_out_0__31_, op_out_0__30_, op_out_0__29_, 
        op_out_0__28_, op_out_0__27_, op_out_0__26_, op_out_0__25_, 
        op_out_0__24_, op_out_0__23_, op_out_0__22_, op_out_0__21_, 
        op_out_0__20_, op_out_0__19_, op_out_0__18_, op_out_0__17_, 
        op_out_0__16_, op_out_0__15_, op_out_0__14_, op_out_0__13_, 
        op_out_0__12_, op_out_0__11_, op_out_0__10_, op_out_0__9_, 
        op_out_0__8_, op_out_0__7_, op_out_0__6_, op_out_0__5_, op_out_0__4_, 
        op_out_0__3_, op_out_0__2_, op_out_0__1_, op_out_0__0_}), .round_key(
        round_key) );
  AES_256_roundop_5 op3 ( .output_text({op_out_2__127_, op_out_2__126_, 
        op_out_2__125_, op_out_2__124_, op_out_2__123_, op_out_2__122_, 
        op_out_2__121_, op_out_2__120_, op_out_2__119_, op_out_2__118_, 
        op_out_2__117_, op_out_2__116_, op_out_2__115_, op_out_2__114_, 
        op_out_2__113_, op_out_2__112_, op_out_2__111_, op_out_2__110_, 
        op_out_2__109_, op_out_2__108_, op_out_2__107_, op_out_2__106_, 
        op_out_2__105_, op_out_2__104_, op_out_2__103_, op_out_2__102_, 
        op_out_2__101_, op_out_2__100_, op_out_2__99_, op_out_2__98_, 
        op_out_2__97_, op_out_2__96_, op_out_2__95_, op_out_2__94_, 
        op_out_2__93_, op_out_2__92_, op_out_2__91_, op_out_2__90_, 
        op_out_2__89_, op_out_2__88_, op_out_2__87_, op_out_2__86_, 
        op_out_2__85_, op_out_2__84_, op_out_2__83_, op_out_2__82_, 
        op_out_2__81_, op_out_2__80_, op_out_2__79_, op_out_2__78_, 
        op_out_2__77_, op_out_2__76_, op_out_2__75_, op_out_2__74_, 
        op_out_2__73_, op_out_2__72_, op_out_2__71_, op_out_2__70_, 
        op_out_2__69_, op_out_2__68_, op_out_2__67_, op_out_2__66_, 
        op_out_2__65_, op_out_2__64_, op_out_2__63_, op_out_2__62_, 
        op_out_2__61_, op_out_2__60_, op_out_2__59_, op_out_2__58_, 
        op_out_2__57_, op_out_2__56_, op_out_2__55_, op_out_2__54_, 
        op_out_2__53_, op_out_2__52_, op_out_2__51_, op_out_2__50_, 
        op_out_2__49_, op_out_2__48_, op_out_2__47_, op_out_2__46_, 
        op_out_2__45_, op_out_2__44_, op_out_2__43_, op_out_2__42_, 
        op_out_2__41_, op_out_2__40_, op_out_2__39_, op_out_2__38_, 
        op_out_2__37_, op_out_2__36_, op_out_2__35_, op_out_2__34_, 
        op_out_2__33_, op_out_2__32_, op_out_2__31_, op_out_2__30_, 
        op_out_2__29_, op_out_2__28_, op_out_2__27_, op_out_2__26_, 
        op_out_2__25_, op_out_2__24_, op_out_2__23_, op_out_2__22_, 
        op_out_2__21_, op_out_2__20_, op_out_2__19_, op_out_2__18_, 
        op_out_2__17_, op_out_2__16_, op_out_2__15_, op_out_2__14_, 
        op_out_2__13_, op_out_2__12_, op_out_2__11_, op_out_2__10_, 
        op_out_2__9_, op_out_2__8_, op_out_2__7_, op_out_2__6_, op_out_2__5_, 
        op_out_2__4_, op_out_2__3_, op_out_2__2_, op_out_2__1_, op_out_2__0_}), 
        .input_text({op_out_1__127_, op_out_1__126_, op_out_1__125_, 
        op_out_1__124_, op_out_1__123_, op_out_1__122_, op_out_1__121_, 
        op_out_1__120_, op_out_1__119_, op_out_1__118_, op_out_1__117_, 
        op_out_1__116_, op_out_1__115_, op_out_1__114_, op_out_1__113_, 
        op_out_1__112_, op_out_1__111_, op_out_1__110_, op_out_1__109_, 
        op_out_1__108_, op_out_1__107_, op_out_1__106_, op_out_1__105_, 
        op_out_1__104_, op_out_1__103_, op_out_1__102_, op_out_1__101_, 
        op_out_1__100_, op_out_1__99_, op_out_1__98_, op_out_1__97_, 
        op_out_1__96_, op_out_1__95_, op_out_1__94_, op_out_1__93_, 
        op_out_1__92_, op_out_1__91_, op_out_1__90_, op_out_1__89_, 
        op_out_1__88_, op_out_1__87_, op_out_1__86_, op_out_1__85_, 
        op_out_1__84_, op_out_1__83_, op_out_1__82_, op_out_1__81_, 
        op_out_1__80_, op_out_1__79_, op_out_1__78_, op_out_1__77_, 
        op_out_1__76_, op_out_1__75_, op_out_1__74_, op_out_1__73_, 
        op_out_1__72_, op_out_1__71_, op_out_1__70_, op_out_1__69_, 
        op_out_1__68_, op_out_1__67_, op_out_1__66_, op_out_1__65_, 
        op_out_1__64_, op_out_1__63_, op_out_1__62_, op_out_1__61_, 
        op_out_1__60_, op_out_1__59_, op_out_1__58_, op_out_1__57_, 
        op_out_1__56_, op_out_1__55_, op_out_1__54_, op_out_1__53_, 
        op_out_1__52_, op_out_1__51_, op_out_1__50_, op_out_1__49_, 
        op_out_1__48_, op_out_1__47_, op_out_1__46_, op_out_1__45_, 
        op_out_1__44_, op_out_1__43_, op_out_1__42_, op_out_1__41_, 
        op_out_1__40_, op_out_1__39_, op_out_1__38_, op_out_1__37_, 
        op_out_1__36_, op_out_1__35_, op_out_1__34_, op_out_1__33_, 
        op_out_1__32_, op_out_1__31_, op_out_1__30_, op_out_1__29_, 
        op_out_1__28_, op_out_1__27_, op_out_1__26_, op_out_1__25_, 
        op_out_1__24_, op_out_1__23_, op_out_1__22_, op_out_1__21_, 
        op_out_1__20_, op_out_1__19_, op_out_1__18_, op_out_1__17_, 
        op_out_1__16_, op_out_1__15_, op_out_1__14_, op_out_1__13_, 
        op_out_1__12_, op_out_1__11_, op_out_1__10_, op_out_1__9_, 
        op_out_1__8_, op_out_1__7_, op_out_1__6_, op_out_1__5_, op_out_1__4_, 
        op_out_1__3_, op_out_1__2_, op_out_1__1_, op_out_1__0_}), .round_key(
        round_key) );
  AES_256_roundop_4 op4 ( .output_text({op_out_3__127_, op_out_3__126_, 
        op_out_3__125_, op_out_3__124_, op_out_3__123_, op_out_3__122_, 
        op_out_3__121_, op_out_3__120_, op_out_3__119_, op_out_3__118_, 
        op_out_3__117_, op_out_3__116_, op_out_3__115_, op_out_3__114_, 
        op_out_3__113_, op_out_3__112_, op_out_3__111_, op_out_3__110_, 
        op_out_3__109_, op_out_3__108_, op_out_3__107_, op_out_3__106_, 
        op_out_3__105_, op_out_3__104_, op_out_3__103_, op_out_3__102_, 
        op_out_3__101_, op_out_3__100_, op_out_3__99_, op_out_3__98_, 
        op_out_3__97_, op_out_3__96_, op_out_3__95_, op_out_3__94_, 
        op_out_3__93_, op_out_3__92_, op_out_3__91_, op_out_3__90_, 
        op_out_3__89_, op_out_3__88_, op_out_3__87_, op_out_3__86_, 
        op_out_3__85_, op_out_3__84_, op_out_3__83_, op_out_3__82_, 
        op_out_3__81_, op_out_3__80_, op_out_3__79_, op_out_3__78_, 
        op_out_3__77_, op_out_3__76_, op_out_3__75_, op_out_3__74_, 
        op_out_3__73_, op_out_3__72_, op_out_3__71_, op_out_3__70_, 
        op_out_3__69_, op_out_3__68_, op_out_3__67_, op_out_3__66_, 
        op_out_3__65_, op_out_3__64_, op_out_3__63_, op_out_3__62_, 
        op_out_3__61_, op_out_3__60_, op_out_3__59_, op_out_3__58_, 
        op_out_3__57_, op_out_3__56_, op_out_3__55_, op_out_3__54_, 
        op_out_3__53_, op_out_3__52_, op_out_3__51_, op_out_3__50_, 
        op_out_3__49_, op_out_3__48_, op_out_3__47_, op_out_3__46_, 
        op_out_3__45_, op_out_3__44_, op_out_3__43_, op_out_3__42_, 
        op_out_3__41_, op_out_3__40_, op_out_3__39_, op_out_3__38_, 
        op_out_3__37_, op_out_3__36_, op_out_3__35_, op_out_3__34_, 
        op_out_3__33_, op_out_3__32_, op_out_3__31_, op_out_3__30_, 
        op_out_3__29_, op_out_3__28_, op_out_3__27_, op_out_3__26_, 
        op_out_3__25_, op_out_3__24_, op_out_3__23_, op_out_3__22_, 
        op_out_3__21_, op_out_3__20_, op_out_3__19_, op_out_3__18_, 
        op_out_3__17_, op_out_3__16_, op_out_3__15_, op_out_3__14_, 
        op_out_3__13_, op_out_3__12_, op_out_3__11_, op_out_3__10_, 
        op_out_3__9_, op_out_3__8_, op_out_3__7_, op_out_3__6_, op_out_3__5_, 
        op_out_3__4_, op_out_3__3_, op_out_3__2_, op_out_3__1_, op_out_3__0_}), 
        .input_text({op_out_2__127_, op_out_2__126_, op_out_2__125_, 
        op_out_2__124_, op_out_2__123_, op_out_2__122_, op_out_2__121_, 
        op_out_2__120_, op_out_2__119_, op_out_2__118_, op_out_2__117_, 
        op_out_2__116_, op_out_2__115_, op_out_2__114_, op_out_2__113_, 
        op_out_2__112_, op_out_2__111_, op_out_2__110_, op_out_2__109_, 
        op_out_2__108_, op_out_2__107_, op_out_2__106_, op_out_2__105_, 
        op_out_2__104_, op_out_2__103_, op_out_2__102_, op_out_2__101_, 
        op_out_2__100_, op_out_2__99_, op_out_2__98_, op_out_2__97_, 
        op_out_2__96_, op_out_2__95_, op_out_2__94_, op_out_2__93_, 
        op_out_2__92_, op_out_2__91_, op_out_2__90_, op_out_2__89_, 
        op_out_2__88_, op_out_2__87_, op_out_2__86_, op_out_2__85_, 
        op_out_2__84_, op_out_2__83_, op_out_2__82_, op_out_2__81_, 
        op_out_2__80_, op_out_2__79_, op_out_2__78_, op_out_2__77_, 
        op_out_2__76_, op_out_2__75_, op_out_2__74_, op_out_2__73_, 
        op_out_2__72_, op_out_2__71_, op_out_2__70_, op_out_2__69_, 
        op_out_2__68_, op_out_2__67_, op_out_2__66_, op_out_2__65_, 
        op_out_2__64_, op_out_2__63_, op_out_2__62_, op_out_2__61_, 
        op_out_2__60_, op_out_2__59_, op_out_2__58_, op_out_2__57_, 
        op_out_2__56_, op_out_2__55_, op_out_2__54_, op_out_2__53_, 
        op_out_2__52_, op_out_2__51_, op_out_2__50_, op_out_2__49_, 
        op_out_2__48_, op_out_2__47_, op_out_2__46_, op_out_2__45_, 
        op_out_2__44_, op_out_2__43_, op_out_2__42_, op_out_2__41_, 
        op_out_2__40_, op_out_2__39_, op_out_2__38_, op_out_2__37_, 
        op_out_2__36_, op_out_2__35_, op_out_2__34_, op_out_2__33_, 
        op_out_2__32_, op_out_2__31_, op_out_2__30_, op_out_2__29_, 
        op_out_2__28_, op_out_2__27_, op_out_2__26_, op_out_2__25_, 
        op_out_2__24_, op_out_2__23_, op_out_2__22_, op_out_2__21_, 
        op_out_2__20_, op_out_2__19_, op_out_2__18_, op_out_2__17_, 
        op_out_2__16_, op_out_2__15_, op_out_2__14_, op_out_2__13_, 
        op_out_2__12_, op_out_2__11_, op_out_2__10_, op_out_2__9_, 
        op_out_2__8_, op_out_2__7_, op_out_2__6_, op_out_2__5_, op_out_2__4_, 
        op_out_2__3_, op_out_2__2_, op_out_2__1_, op_out_2__0_}), .round_key(
        round_key) );
  AES_256_roundop_3 op5 ( .output_text({op_out_4__127_, op_out_4__126_, 
        op_out_4__125_, op_out_4__124_, op_out_4__123_, op_out_4__122_, 
        op_out_4__121_, op_out_4__120_, op_out_4__119_, op_out_4__118_, 
        op_out_4__117_, op_out_4__116_, op_out_4__115_, op_out_4__114_, 
        op_out_4__113_, op_out_4__112_, op_out_4__111_, op_out_4__110_, 
        op_out_4__109_, op_out_4__108_, op_out_4__107_, op_out_4__106_, 
        op_out_4__105_, op_out_4__104_, op_out_4__103_, op_out_4__102_, 
        op_out_4__101_, op_out_4__100_, op_out_4__99_, op_out_4__98_, 
        op_out_4__97_, op_out_4__96_, op_out_4__95_, op_out_4__94_, 
        op_out_4__93_, op_out_4__92_, op_out_4__91_, op_out_4__90_, 
        op_out_4__89_, op_out_4__88_, op_out_4__87_, op_out_4__86_, 
        op_out_4__85_, op_out_4__84_, op_out_4__83_, op_out_4__82_, 
        op_out_4__81_, op_out_4__80_, op_out_4__79_, op_out_4__78_, 
        op_out_4__77_, op_out_4__76_, op_out_4__75_, op_out_4__74_, 
        op_out_4__73_, op_out_4__72_, op_out_4__71_, op_out_4__70_, 
        op_out_4__69_, op_out_4__68_, op_out_4__67_, op_out_4__66_, 
        op_out_4__65_, op_out_4__64_, op_out_4__63_, op_out_4__62_, 
        op_out_4__61_, op_out_4__60_, op_out_4__59_, op_out_4__58_, 
        op_out_4__57_, op_out_4__56_, op_out_4__55_, op_out_4__54_, 
        op_out_4__53_, op_out_4__52_, op_out_4__51_, op_out_4__50_, 
        op_out_4__49_, op_out_4__48_, op_out_4__47_, op_out_4__46_, 
        op_out_4__45_, op_out_4__44_, op_out_4__43_, op_out_4__42_, 
        op_out_4__41_, op_out_4__40_, op_out_4__39_, op_out_4__38_, 
        op_out_4__37_, op_out_4__36_, op_out_4__35_, op_out_4__34_, 
        op_out_4__33_, op_out_4__32_, op_out_4__31_, op_out_4__30_, 
        op_out_4__29_, op_out_4__28_, op_out_4__27_, op_out_4__26_, 
        op_out_4__25_, op_out_4__24_, op_out_4__23_, op_out_4__22_, 
        op_out_4__21_, op_out_4__20_, op_out_4__19_, op_out_4__18_, 
        op_out_4__17_, op_out_4__16_, op_out_4__15_, op_out_4__14_, 
        op_out_4__13_, op_out_4__12_, op_out_4__11_, op_out_4__10_, 
        op_out_4__9_, op_out_4__8_, op_out_4__7_, op_out_4__6_, op_out_4__5_, 
        op_out_4__4_, op_out_4__3_, op_out_4__2_, op_out_4__1_, op_out_4__0_}), 
        .input_text({op_out_3__127_, op_out_3__126_, op_out_3__125_, 
        op_out_3__124_, op_out_3__123_, op_out_3__122_, op_out_3__121_, 
        op_out_3__120_, op_out_3__119_, op_out_3__118_, op_out_3__117_, 
        op_out_3__116_, op_out_3__115_, op_out_3__114_, op_out_3__113_, 
        op_out_3__112_, op_out_3__111_, op_out_3__110_, op_out_3__109_, 
        op_out_3__108_, op_out_3__107_, op_out_3__106_, op_out_3__105_, 
        op_out_3__104_, op_out_3__103_, op_out_3__102_, op_out_3__101_, 
        op_out_3__100_, op_out_3__99_, op_out_3__98_, op_out_3__97_, 
        op_out_3__96_, op_out_3__95_, op_out_3__94_, op_out_3__93_, 
        op_out_3__92_, op_out_3__91_, op_out_3__90_, op_out_3__89_, 
        op_out_3__88_, op_out_3__87_, op_out_3__86_, op_out_3__85_, 
        op_out_3__84_, op_out_3__83_, op_out_3__82_, op_out_3__81_, 
        op_out_3__80_, op_out_3__79_, op_out_3__78_, op_out_3__77_, 
        op_out_3__76_, op_out_3__75_, op_out_3__74_, op_out_3__73_, 
        op_out_3__72_, op_out_3__71_, op_out_3__70_, op_out_3__69_, 
        op_out_3__68_, op_out_3__67_, op_out_3__66_, op_out_3__65_, 
        op_out_3__64_, op_out_3__63_, op_out_3__62_, op_out_3__61_, 
        op_out_3__60_, op_out_3__59_, op_out_3__58_, op_out_3__57_, 
        op_out_3__56_, op_out_3__55_, op_out_3__54_, op_out_3__53_, 
        op_out_3__52_, op_out_3__51_, op_out_3__50_, op_out_3__49_, 
        op_out_3__48_, op_out_3__47_, op_out_3__46_, op_out_3__45_, 
        op_out_3__44_, op_out_3__43_, op_out_3__42_, op_out_3__41_, 
        op_out_3__40_, op_out_3__39_, op_out_3__38_, op_out_3__37_, 
        op_out_3__36_, op_out_3__35_, op_out_3__34_, op_out_3__33_, 
        op_out_3__32_, op_out_3__31_, op_out_3__30_, op_out_3__29_, 
        op_out_3__28_, op_out_3__27_, op_out_3__26_, op_out_3__25_, 
        op_out_3__24_, op_out_3__23_, op_out_3__22_, op_out_3__21_, 
        op_out_3__20_, op_out_3__19_, op_out_3__18_, op_out_3__17_, 
        op_out_3__16_, op_out_3__15_, op_out_3__14_, op_out_3__13_, 
        op_out_3__12_, op_out_3__11_, op_out_3__10_, op_out_3__9_, 
        op_out_3__8_, op_out_3__7_, op_out_3__6_, op_out_3__5_, op_out_3__4_, 
        op_out_3__3_, op_out_3__2_, op_out_3__1_, op_out_3__0_}), .round_key(
        round_key) );
  AES_256_roundop_2 op6 ( .output_text({op_out_5__127_, op_out_5__126_, 
        op_out_5__125_, op_out_5__124_, op_out_5__123_, op_out_5__122_, 
        op_out_5__121_, op_out_5__120_, op_out_5__119_, op_out_5__118_, 
        op_out_5__117_, op_out_5__116_, op_out_5__115_, op_out_5__114_, 
        op_out_5__113_, op_out_5__112_, op_out_5__111_, op_out_5__110_, 
        op_out_5__109_, op_out_5__108_, op_out_5__107_, op_out_5__106_, 
        op_out_5__105_, op_out_5__104_, op_out_5__103_, op_out_5__102_, 
        op_out_5__101_, op_out_5__100_, op_out_5__99_, op_out_5__98_, 
        op_out_5__97_, op_out_5__96_, op_out_5__95_, op_out_5__94_, 
        op_out_5__93_, op_out_5__92_, op_out_5__91_, op_out_5__90_, 
        op_out_5__89_, op_out_5__88_, op_out_5__87_, op_out_5__86_, 
        op_out_5__85_, op_out_5__84_, op_out_5__83_, op_out_5__82_, 
        op_out_5__81_, op_out_5__80_, op_out_5__79_, op_out_5__78_, 
        op_out_5__77_, op_out_5__76_, op_out_5__75_, op_out_5__74_, 
        op_out_5__73_, op_out_5__72_, op_out_5__71_, op_out_5__70_, 
        op_out_5__69_, op_out_5__68_, op_out_5__67_, op_out_5__66_, 
        op_out_5__65_, op_out_5__64_, op_out_5__63_, op_out_5__62_, 
        op_out_5__61_, op_out_5__60_, op_out_5__59_, op_out_5__58_, 
        op_out_5__57_, op_out_5__56_, op_out_5__55_, op_out_5__54_, 
        op_out_5__53_, op_out_5__52_, op_out_5__51_, op_out_5__50_, 
        op_out_5__49_, op_out_5__48_, op_out_5__47_, op_out_5__46_, 
        op_out_5__45_, op_out_5__44_, op_out_5__43_, op_out_5__42_, 
        op_out_5__41_, op_out_5__40_, op_out_5__39_, op_out_5__38_, 
        op_out_5__37_, op_out_5__36_, op_out_5__35_, op_out_5__34_, 
        op_out_5__33_, op_out_5__32_, op_out_5__31_, op_out_5__30_, 
        op_out_5__29_, op_out_5__28_, op_out_5__27_, op_out_5__26_, 
        op_out_5__25_, op_out_5__24_, op_out_5__23_, op_out_5__22_, 
        op_out_5__21_, op_out_5__20_, op_out_5__19_, op_out_5__18_, 
        op_out_5__17_, op_out_5__16_, op_out_5__15_, op_out_5__14_, 
        op_out_5__13_, op_out_5__12_, op_out_5__11_, op_out_5__10_, 
        op_out_5__9_, op_out_5__8_, op_out_5__7_, op_out_5__6_, op_out_5__5_, 
        op_out_5__4_, op_out_5__3_, op_out_5__2_, op_out_5__1_, op_out_5__0_}), 
        .input_text({op_out_4__127_, op_out_4__126_, op_out_4__125_, 
        op_out_4__124_, op_out_4__123_, op_out_4__122_, op_out_4__121_, 
        op_out_4__120_, op_out_4__119_, op_out_4__118_, op_out_4__117_, 
        op_out_4__116_, op_out_4__115_, op_out_4__114_, op_out_4__113_, 
        op_out_4__112_, op_out_4__111_, op_out_4__110_, op_out_4__109_, 
        op_out_4__108_, op_out_4__107_, op_out_4__106_, op_out_4__105_, 
        op_out_4__104_, op_out_4__103_, op_out_4__102_, op_out_4__101_, 
        op_out_4__100_, op_out_4__99_, op_out_4__98_, op_out_4__97_, 
        op_out_4__96_, op_out_4__95_, op_out_4__94_, op_out_4__93_, 
        op_out_4__92_, op_out_4__91_, op_out_4__90_, op_out_4__89_, 
        op_out_4__88_, op_out_4__87_, op_out_4__86_, op_out_4__85_, 
        op_out_4__84_, op_out_4__83_, op_out_4__82_, op_out_4__81_, 
        op_out_4__80_, op_out_4__79_, op_out_4__78_, op_out_4__77_, 
        op_out_4__76_, op_out_4__75_, op_out_4__74_, op_out_4__73_, 
        op_out_4__72_, op_out_4__71_, op_out_4__70_, op_out_4__69_, 
        op_out_4__68_, op_out_4__67_, op_out_4__66_, op_out_4__65_, 
        op_out_4__64_, op_out_4__63_, op_out_4__62_, op_out_4__61_, 
        op_out_4__60_, op_out_4__59_, op_out_4__58_, op_out_4__57_, 
        op_out_4__56_, op_out_4__55_, op_out_4__54_, op_out_4__53_, 
        op_out_4__52_, op_out_4__51_, op_out_4__50_, op_out_4__49_, 
        op_out_4__48_, op_out_4__47_, op_out_4__46_, op_out_4__45_, 
        op_out_4__44_, op_out_4__43_, op_out_4__42_, op_out_4__41_, 
        op_out_4__40_, op_out_4__39_, op_out_4__38_, op_out_4__37_, 
        op_out_4__36_, op_out_4__35_, op_out_4__34_, op_out_4__33_, 
        op_out_4__32_, op_out_4__31_, op_out_4__30_, op_out_4__29_, 
        op_out_4__28_, op_out_4__27_, op_out_4__26_, op_out_4__25_, 
        op_out_4__24_, op_out_4__23_, op_out_4__22_, op_out_4__21_, 
        op_out_4__20_, op_out_4__19_, op_out_4__18_, op_out_4__17_, 
        op_out_4__16_, op_out_4__15_, op_out_4__14_, op_out_4__13_, 
        op_out_4__12_, op_out_4__11_, op_out_4__10_, op_out_4__9_, 
        op_out_4__8_, op_out_4__7_, op_out_4__6_, op_out_4__5_, op_out_4__4_, 
        op_out_4__3_, op_out_4__2_, op_out_4__1_, op_out_4__0_}), .round_key(
        round_key) );
  AES_256_roundop_1 op7 ( .output_text(output_text), .input_text({
        op_out_5__127_, op_out_5__126_, op_out_5__125_, op_out_5__124_, 
        op_out_5__123_, op_out_5__122_, op_out_5__121_, op_out_5__120_, 
        op_out_5__119_, op_out_5__118_, op_out_5__117_, op_out_5__116_, 
        op_out_5__115_, op_out_5__114_, op_out_5__113_, op_out_5__112_, 
        op_out_5__111_, op_out_5__110_, op_out_5__109_, op_out_5__108_, 
        op_out_5__107_, op_out_5__106_, op_out_5__105_, op_out_5__104_, 
        op_out_5__103_, op_out_5__102_, op_out_5__101_, op_out_5__100_, 
        op_out_5__99_, op_out_5__98_, op_out_5__97_, op_out_5__96_, 
        op_out_5__95_, op_out_5__94_, op_out_5__93_, op_out_5__92_, 
        op_out_5__91_, op_out_5__90_, op_out_5__89_, op_out_5__88_, 
        op_out_5__87_, op_out_5__86_, op_out_5__85_, op_out_5__84_, 
        op_out_5__83_, op_out_5__82_, op_out_5__81_, op_out_5__80_, 
        op_out_5__79_, op_out_5__78_, op_out_5__77_, op_out_5__76_, 
        op_out_5__75_, op_out_5__74_, op_out_5__73_, op_out_5__72_, 
        op_out_5__71_, op_out_5__70_, op_out_5__69_, op_out_5__68_, 
        op_out_5__67_, op_out_5__66_, op_out_5__65_, op_out_5__64_, 
        op_out_5__63_, op_out_5__62_, op_out_5__61_, op_out_5__60_, 
        op_out_5__59_, op_out_5__58_, op_out_5__57_, op_out_5__56_, 
        op_out_5__55_, op_out_5__54_, op_out_5__53_, op_out_5__52_, 
        op_out_5__51_, op_out_5__50_, op_out_5__49_, op_out_5__48_, 
        op_out_5__47_, op_out_5__46_, op_out_5__45_, op_out_5__44_, 
        op_out_5__43_, op_out_5__42_, op_out_5__41_, op_out_5__40_, 
        op_out_5__39_, op_out_5__38_, op_out_5__37_, op_out_5__36_, 
        op_out_5__35_, op_out_5__34_, op_out_5__33_, op_out_5__32_, 
        op_out_5__31_, op_out_5__30_, op_out_5__29_, op_out_5__28_, 
        op_out_5__27_, op_out_5__26_, op_out_5__25_, op_out_5__24_, 
        op_out_5__23_, op_out_5__22_, op_out_5__21_, op_out_5__20_, 
        op_out_5__19_, op_out_5__18_, op_out_5__17_, op_out_5__16_, 
        op_out_5__15_, op_out_5__14_, op_out_5__13_, op_out_5__12_, 
        op_out_5__11_, op_out_5__10_, op_out_5__9_, op_out_5__8_, op_out_5__7_, 
        op_out_5__6_, op_out_5__5_, op_out_5__4_, op_out_5__3_, op_out_5__2_, 
        op_out_5__1_, op_out_5__0_}), .round_key(round_key) );
endmodule

